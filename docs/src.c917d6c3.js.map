{"version":3,"sources":["src/consts.js","src/abstractController.js","src/inputHandler.js","src/grid.js","src/effects/effectStartPhase.js","src/effects/effectGameOver.js","src/effects/effectStageClear.js","src/enemyAI.js","src/pathFinder.js","src/button.js","src/stage.js","src/stages/oldStage04.js","src/stages/test_reinforcement.js","src/stages/test_barrier.js","src/stages/stage_0_0.js","src/stages/stage_0_1.js","src/stages/stage_0_2.js","src/stages/stage_0_3.js","src/stages/stage_0_4.js","src/stages/stage_0_5.js","src/stages/stage_0_6.js","src/stages/stage_1_1.js","src/stages/stage_1_2.js","src/stages/stage_1_3_easy.js","src/stages/stage_1_4.js","src/stages/stage_1_5.js","src/stages/abysmal.js","src/stages/stageList.js","src/unitBase.js","src/units/protoPlayer.js","src/texts/texts_jp.js","src/units/pKenshi.js","src/units/pRizaruto.js","src/units/pTomato.js","src/units/pBlueberry.js","src/units/pCabbage.js","src/units/protoEnemy.js","src/units/eKenshi.js","src/units/eArcher.js","src/units/eCavLance.js","src/units/eCavBow.js","src/units/eDKAxe.js","src/units/unitCreator.js","src/skills/skillPassive.js","src/skills/passive/extraStamina.js","src/skills/passive/extraMovement.js","src/skills/passive/passiveFlyer.js","src/skills/passive/passiveRanged.js","src/skills/skillCreator.js","src/skills/moveAssist.js","src/skills/moveAssistList.js","src/ui/threatMap.js","src/ui/statusPanel.js","src/ui/generalTimer.js","src/game.js","src/ui/mapSelecter.js","src/ui/skillSelecter.js","src/index.js"],"names":["consts","terrainTypes","Nrm","Mnt","Wtr","Wll","buttons","TurnEnd","Wait","Threat","Barrier","gameResult","None","Win","Lose","GameEnded","moveTypes","infantry","cavalry","flyer","unitTypes","unitBase","pRizaruto","pTomato","pBlueberry","pCabbage","pKenshi","eKenshi","eArcher","eCavLance","eCavBow","eDKAxe","zokusei","none","red","green","blue","moveAssist","reposition","drawBack","swap","skills","extraStamina","extraMovement","passiveFlyer","passiveRanged","settings","showUnitID","game","maxPlayerUnitNumber","maxSkillNumber","CTRL_STATE_NONE","CTRL_STATE_SELECTED","CTRL_STATE_DEST_CHOSEN","CTRL_STATE_TARGET_CHOSEN","CTRL_STATE_MA_TARGET_CHOSEN","AbstractController","isEnemy","hGame","ctrlState","currentButtonID","currentUnit","currentDest","currentTarget","unit","eventSelect","eventSelectUnit","eventDeselect","eventStopBeingTargeted","gp","eventProposeDestination","eventProposeTarget","eventBeTargeted","buttonID","stateDeselect","eventButtonTurnEnd","stateClearButton","eventExecuteWait","toggleThreat","toggleBarrier","x","maxGrid","y","findSelfUnitByGridPos","isActive","stateSelect","findOppoUnitByGridPos","findUnitByGridPos","checkMoveDestination","stateConfirmDestination","checkAttackTarget","gridPos","localAlert","stateConfirmTarget","unitID","checkMoveAssist","stateConfirmMATarget","eventExecuteMovement","eventExecuteAttack","eventExecuteMoveAssist","str","InputHandler","hCanvas","abstractController","clickPosQueue","isMobile","test","navigator","userAgent","isApple","touchEvent","addEventListener","event","mouseClick","getMousePosWithinCanvas","preventDefault","undefined","touches","length","rect","getBoundingClientRect","clientX","left","right","width","clientY","top","bottom","height","pos","isPhaseBlocked","currentPhase","PHASE_PLAYER","push","df","shift","gameWidth","gameHeight","clickGP","posToGridPos","clickButton","findButton","Grid","gridSize","xMax","yMax","lineHalfWidth","ctx","fillStyle","fillRect","effectStartPhase","isEnemyPhase","frame","maxFrame","image","document","getElementById","drawX","drawY","eventEffectEnd","drawImage","effectGameOver","drawScale","drawAngle","phase","phaseLength","Math","PI","trX","trY","translate","rotate","effectStageClear","MAX_DIST","zoku","EnemyAI","suList","enemyUnitList","ouList","playerUnitList","absCon","suPDIR","ouPDIR","blockFrameRemain","blockFramePerAttack","blockFramePerMove","blockFramePerWait","dest","executeWait","target","su","minDist","bestGP","idx","pathData","attackable","listAttackable","gpsFrom","forEach","dist","suIdx","flagDone","obj","destGP","findBestAttackPosition","executeMoveAttack","ou","params","moveDist","compareZokusei","score","len","i","z","abs","listPossibleDest","bestScore","pdir","pathFinder","floodFill","distTarget","zokuseiChasingDistScore","getChasingPosScore","newScore","executeMove","closestUnitIdx","lenLA","j","suLen","ouLen","updatePDIR","findClosestUnit","findFirstActiveSu","res","findOppoUnitAndAttack","tryGetClose","executeEndTurn","makeOneMove","dx","dy","dAtk","PathFinder","eList","pList","hStage","stage","visited","path","startGP","searchRange","flagIgnoreEnemyUnit","prev","queue","head","tail","dAttacks","attackRange","addAttackable","xNew","yNew","gpNew","checkPassable","goalGP","retrievePath","dgp","checkIfGpInMaxGrid","BUTTON_OFFSET_X","Button","imgString","id","drawGP","img","gridPosToPos","drawScaleMax","min","T","Stage","terrainMap","unitList","nameStr","imageCache","appearTurn","eventPlaceUnit","typeID","turn","PHASE_ENEMY","getTerrain","U","stageCreator","barrier","skill","level","StageList","list","defaultStageIdx","Stage0000","Stage0001","Stage0002","Stage0003","Stage0004","Stage0005","Stage0006","Stage0101","Stage0102","Stage0103","Stage0104","Stage0105","OldStage04","Abysmal","StageTestBarrier","StageTestReinforcement","idxStr","parseInt","UnitBase","imageID","imageSize","staminaMax","moveDistMax","moveType","skillList","skillLevelPair","newSkill","skillCreator","createSkill","isFighterSkill","isFighter","isPassive","applyOnce","createSkills","applyPassiveSkills","zokuStr","imageZokusei","hp","attack","alive","stamina","updateCoordinate","resetControlState","resetProposal","isSelected","isTargeted","hasDestProposal","destProposalGP","destProposalCoord","pathToDestProposal","pathToDestProposalCoord","hasTargetProposal","targetProposal","updatePathData","ignoreUnit","checkTerrain","isReachable","acceptPath","eventActionExecuted","coordinate","executeAction","eventBattle","damage","eventUnitDeath","flag","isInPhase","isAlive","graveImage","ProtoPlayer","JSON","parse","stringify","texts","PKenshi","PRizaruto","PTomato","PBlueberry","PCabbage","ProtoEnemy","barrierTimer","barrierConnectionTimer","barrierTotal","barrierSourceList","unitSource","findUnitByID","imageBarrier","imageZokuseiReal","indexOf","removeObjectFromList","initBarrier","flagDrawAllBarrier","flagUnitSelected","timer","lineWidth","strokeStyle","x2","gridPosToPosX","y2","gridPosToPosY","x1","y1","drawLine","beginPath","moveTo","lineTo","stroke","object","splice","EKenshi","EArcher","ECavLance","ECavBow","uType","UnitCreator","EDKAxe","SkillPassive","hUnit","skillID","ExtraStamina","ExtraMovement","PassiveFlyer","PassiveRanged","SkillCreator","defaultIdx","mapIDtoTexts","skillStr","num","MoveAssist","dUser","dTarget","user","dir","getDirection","gpNewUser","checkStopable","gpNewTarget","eventMovedByMoveAssist","eventUseMoveAssist","MoveAssistList","names","repo","copyToFourDirs","Object","entries","key","value","maID","checkEligibility","execute","ThreatMap","flagShowThreat","threatMap","thickness","drawOffsetX","drawOffsetY","drawDX","drawDY","k","sx","sy","StatusPanel","skillCounter","fillText","font","cUP","drawSkillText","moveAssistList","skillLvPair","GeneralTimer","dfRate","maxValue","Game","canvas","PHASE_NONE","grid","stageList","unitCreator","flagUseCustomPlayerSkills","customPlayerSkills","mapSkillIDtoStr","buttonList","makeButtons","resetGameState","currentStageIdxStr","effectList","timerList","framesBeforeChangePhase","enemyAI","statusPanel","inputHandler","playerInputHandler","flagConflict","newUnit","createUnit","overridePlayerSkills","initAfterCreation","resolveNewUnitConflict","eventForceMovement","startDefaultStage","start","stageIdxStr","loadStage","initStage","playerPhase","requirePathUpdate","eventRequirePathUpdate","updateThreatMap","resetTimer","count","countActiveUnits","endPhase","eventNewTurn","effect","endTurn","addNewEffect","EffectStartPhase","enemyPhase","findUnitInListByGridPos","findEnemyUnitByGridPos","findPlayerUnitByGridPos","find","result","button","checkClick","eventClick","attacker","eventLoseHP","eu","eventLoseBarrier","EffectStageClear","EffectGameOver","gameEnds","update","procChangePhase","draw","drawThreat","drawUnitBG","drawUnit","drawBarrierConnection","gpx","gpy","floor","MapSelecter","innerHTML","getStageListStringForMapSelecter","e","options","selectedIndex","divSelecter","maxSkills","unitNum","u","getSkillListStringForSelecter","changePlayerSkillsAndRestart","usePresetSkillsAndRestart","getContext","GAME_WIDTH","GAME_HEIGHT","DRAW_WIDTH","DRAW_HEIGHT","bindPlayerInputHandler","mapSelecter","skillSelecter","SkillSelecter","lastTime","gameLoop","timestamp","dt","clearRect","requestAnimationFrame","scriptCollapsibles","strClass","collapsibles","getElementsByClassName","classList","toggle","content","nextElementSibling","style","display"],"mappings":"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","file":"src.c917d6c3.js","sourceRoot":"..","sourcesContent":["const consts = {\r\n    terrainTypes: {\r\n        Nrm: 0, // normal\r\n        Mnt: 1, // mountain\r\n        Wtr: 2, // water\r\n        Wll: 3 // wall\r\n    },\r\n    buttons: {\r\n        TurnEnd: 0,\r\n        Wait: 1,\r\n\t\tThreat: 2,\r\n\t\tBarrier: 3,\r\n    },\r\n    gameResult: {\r\n        None: 0,\r\n        Win: 1,\r\n        Lose: 2,\r\n\t\tGameEnded: 3\r\n    },\r\n\tmoveTypes: {\r\n\t\tinfantry: 0,\r\n\t\tcavalry: 1,\r\n\t\tflyer: 2\r\n\t},\r\n\tunitTypes: {\r\n\t\tunitBase: 0,\r\n\t\t\r\n\t\tpRizaruto: 1,\r\n\t\tpTomato: 2,\r\n\t\tpBlueberry: 3,\r\n\t\tpCabbage: 4,\r\n\t\tpKenshi: 5,\r\n\t\t\r\n\t\teKenshi: 11,\r\n\t\teArcher: 12,\r\n\t\teCavLance: 13,\r\n\t\teCavBow: 14,\r\n\t\teDKAxe: 15\r\n\t},\r\n\tzokusei: {\r\n\t\tnone: 0,\r\n\t\tred: 1,\r\n\t\tgreen: 2,\r\n\t\tblue: 3\r\n\t},\r\n\tmoveAssist: {\r\n\t\treposition: 0,\r\n\t\tdrawBack: 1,\r\n\t\tswap: 2\r\n\t},\r\n\tskills: {\r\n\t\tnone: 0,\r\n\t\textraStamina: 1,\r\n\t\textraMovement: 2,\r\n\t\tpassiveFlyer: 3,\r\n\t\tpassiveRanged: 4,\r\n\t},\r\n\tsettings: {\r\n\t\tshowUnitID: true,\r\n\t},\r\n\tgame: {\r\n\t\tmaxPlayerUnitNumber : 4,\r\n\t\tmaxSkillNumber : 5,\r\n\t}\r\n};\r\nexport default consts;\r\n","import consts from \"/src/consts\";\r\n\r\nconst CTRL_STATE_NONE = 0; // no player unit selected (can have enemy unit selected)\r\nconst CTRL_STATE_SELECTED = 1; // player unit selected\r\nconst CTRL_STATE_DEST_CHOSEN = 2; // move pos selected\r\nconst CTRL_STATE_TARGET_CHOSEN = 3; // attack target selected, one more click to execute\r\nconst CTRL_STATE_MA_TARGET_CHOSEN = 4; // move assist target selected\r\n\r\n//const CTRL_STATE_BUTTON = 4; // clicked some button.\r\n\r\n\r\n// this stuff will be used by both player and AI\r\n// AI use it by faking clicks. It'll be a longer seq of codes for AI scripts but it will make sure consistency.\r\n// under such framework, AI should never call unit's event methods.\r\n\r\n// The main reason we have this stuff is because I wrongly \r\n// made it possible for controllers to change unit states directly.\r\n// The more proper way to do this is that the controller tells the game\r\n// and then the game changes unit states.\r\n\r\n// but yeah now I think this stuff might be good for making replays consistent.\r\n\r\nexport default class AbstractController {\r\n    constructor(game, isEnemy) {\r\n        this.hGame = game;\r\n        this.isEnemy = isEnemy;\r\n        this.ctrlState = CTRL_STATE_NONE;\r\n\t\tthis.currentButtonID = null;\r\n        this.currentUnit = null;\r\n        this.currentDest = null;\r\n        this.currentTarget = null;\r\n    }\r\n\r\n\tstateSelect(unit) {\r\n\t\t// state change not included here!!\r\n\t\tthis.currentUnit = unit;\r\n        unit.eventSelect();\r\n\t\tthis.hGame.eventSelectUnit(unit); // for UI update\r\n\t}\r\n\r\n    stateDeselect() {\r\n\t\tif (this.currentUnit !== null) {\r\n\t\t\tthis.currentUnit.eventDeselect();\r\n\t\t\tthis.currentUnit = null; \r\n\t\t}\r\n\t\tthis.hGame.eventDeselect(); // for UI update\r\n\t\tif (this.currentTarget !== null) {\r\n\t\t\tthis.currentTarget.eventStopBeingTargeted();\r\n\t\t\tthis.currentTarget = null;\r\n\t\t}\r\n        this.ctrlState = CTRL_STATE_NONE;\r\n    }\r\n\r\n    stateConfirmDestination(gp) {\r\n        this.currentDest = gp;\r\n        this.ctrlState = CTRL_STATE_DEST_CHOSEN;\r\n        this.currentUnit.eventProposeDestination(gp);\r\n    }\r\n\t\r\n\tstateClearButton() {\r\n\t\tthis.currentButtonID = null;\r\n\t}\r\n\r\n    stateConfirmTarget(unit) {\r\n        this.ctrlState = CTRL_STATE_TARGET_CHOSEN;\r\n        this.currentTarget = unit;\r\n        this.currentUnit.eventProposeTarget(unit);\r\n        unit.eventBeTargeted(); // this doesn't seem right here, should be in Game or at least another class\r\n    }\r\n\t\r\n\tstateConfirmMATarget(unit) {\r\n        this.ctrlState = CTRL_STATE_MA_TARGET_CHOSEN;\r\n        this.currentTarget = unit;\r\n        unit.eventBeTargeted(); // this doesn't seem right here, should be in Game or at least another class\r\n\t}\r\n\r\n    clickButton(buttonID) {\r\n        if (buttonID === consts.buttons.TurnEnd) {\r\n            if (this.ctrlState === CTRL_STATE_NONE \r\n\t\t\t\t|| this.ctrlState === CTRL_STATE_SELECTED) \r\n\t\t\t{\r\n\t\t\t\tif (this.currentButtonID === null) {\r\n\t\t\t\t\t// first time clicked\r\n\t\t\t\t\tthis.currentButtonID = buttonID;\r\n\t\t\t\t\tif (this.currentUnit !== null) this.stateDeselect();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else if (this.currentButtonID === consts.buttons.TurnEnd) {\r\n\t\t\t\t\t// second time: execute\r\n\t\t\t\t\tthis.hGame.eventButtonTurnEnd();\r\n\t\t\t\t\tthis.stateClearButton();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// wrong button\r\n\t\t\t\t\tthis.stateClearButton();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.stateClearButton();\r\n\t\t\t}\r\n        } else if (buttonID === consts.buttons.Wait) {\r\n            if (this.ctrlState === CTRL_STATE_SELECTED) {\r\n\t\t\t\tif (this.currentButtonID === null) {\r\n\t\t\t\t\t// first time clicked\r\n\t\t\t\t\tthis.currentButtonID = buttonID;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else if (this.currentButtonID === consts.buttons.Wait) {\r\n\t\t\t\t\t// second time: execute\r\n\t\t\t\t\tthis.currentUnit.eventExecuteWait();\r\n\t\t\t\t\tthis.stateDeselect();\r\n\t\t\t\t\tthis.stateClearButton();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// wrong button\r\n\t\t\t\t\tthis.stateClearButton();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.stateClearButton();\r\n\t\t\t}\r\n        } else if (buttonID === consts.buttons.Threat) {\r\n            this.hGame.toggleThreat();\r\n\t\t\treturn true;\r\n        } else if (buttonID === consts.buttons.Barrier) {\r\n            this.hGame.toggleBarrier();\r\n\t\t\treturn true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clickGP(gp) {\r\n        if (gp.x < 1 ||\r\n            gp.x > this.hGame.maxGrid.x ||\r\n            gp.y < 1 ||\r\n            gp.y > this.hGame.maxGrid.y\r\n        ) {\r\n\t\t\t//localAlert(\"the selected position is out of bound\");\r\n            return false;\r\n        }\r\n\t\t\r\n\t\tthis.stateClearButton();\r\n\r\n        if (this.ctrlState === CTRL_STATE_NONE) {\r\n            // no player unit selected before, check which unit to select now\r\n            if (this.currentUnit !== null) {\r\n                this.currentUnit.eventDeselect();\r\n                this.currentUnit = null;\r\n            }\r\n            let unit = this.hGame.findSelfUnitByGridPos(this.isEnemy, gp);\r\n            if (unit !== null) {\r\n                if (unit.isActive()) this.ctrlState = CTRL_STATE_SELECTED;\r\n                this.stateSelect(unit);\r\n            } else {\r\n                unit = this.hGame.findOppoUnitByGridPos(this.isEnemy, gp);\r\n                if (unit !== null) {\r\n                    this.stateSelect(unit);\r\n                }\r\n            }\r\n            if (unit === null) {\r\n                //localAlert(\"No unit found\");\r\n\t\t\t\tthis.stateDeselect();\r\n                this.ctrlState = CTRL_STATE_NONE;\r\n                return false;\r\n            }\r\n        } else if (this.ctrlState === CTRL_STATE_SELECTED) {\r\n            // player unit selected, check where to move now\r\n            let unit = this.hGame.findUnitByGridPos(gp);\r\n            if (unit === null && this.currentUnit.checkMoveDestination(gp)) {\r\n                this.stateConfirmDestination(gp);\r\n                return true;\r\n            } else {\r\n                if (unit !== null &&\r\n                    unit.isEnemy !== this.isEnemy &&\r\n                    this.currentUnit.checkAttackTarget(\r\n                        unit,\r\n                        this.currentUnit.gridPos\r\n                    )\r\n                ) {\r\n\t\t\t\t\tlocalAlert(\r\n                        \"selected an eligible target during dest proposition\"\r\n                    );\r\n                    this.stateConfirmDestination(this.currentUnit.gridPos);\r\n                    this.stateConfirmTarget(unit);\r\n                    return true;\r\n                } else if (unit !== null &&\r\n\t\t\t\t\tunit.unitID !== this.currentUnit.unitID &&\r\n                    unit.isEnemy === this.isEnemy &&\r\n                    this.hGame.checkMoveAssist(\r\n\t\t\t\t\t\tthis.currentUnit, \r\n\t\t\t\t\t\tthis.currentUnit.gridPos,\r\n\t\t\t\t\t\tunit\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\t\r\n\t\t\t\t\tthis.stateConfirmDestination(this.currentUnit.gridPos);\r\n                    this.stateConfirmMATarget(unit);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n                    localAlert(\"invalid destination\");\r\n                    this.stateDeselect();\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (this.ctrlState === CTRL_STATE_DEST_CHOSEN) {\r\n            // destination chosen, execute movement or find attack target.\r\n            let unit = this.hGame.findUnitByGridPos(gp);\r\n            if (unit === null &&\r\n                gp.x === this.currentDest.x &&\r\n                gp.y === this.currentDest.y\r\n            ) {\r\n\t\t\t\t// execute movement\r\n                this.currentUnit.eventExecuteMovement(gp);\r\n                this.stateDeselect();\r\n                return true;\r\n            } else {\r\n                if (unit !== null &&\r\n                    unit.isEnemy !== this.isEnemy &&\r\n                    this.currentUnit.checkAttackTarget(unit, this.currentDest)\r\n                ) {\t// target confirmed\r\n                    this.stateConfirmTarget(unit);\r\n                    return true;\r\n                } else if (unit !== null &&\r\n\t\t\t\t\tunit.unitID !== this.currentUnit.unitID &&\r\n                    unit.isEnemy === this.isEnemy &&\r\n                    this.hGame.checkMoveAssist(\r\n\t\t\t\t\t\tthis.currentUnit, \r\n\t\t\t\t\t\tthis.currentDest,\r\n\t\t\t\t\t\tunit\r\n\t\t\t\t\t)\r\n\t\t\t\t)  { // Move assist target confirmed\r\n                    this.stateConfirmMATarget(unit);\r\n                    return true;\r\n\t\t\t\t} else {\r\n                    // invalid target\r\n                    this.stateDeselect();\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (this.ctrlState === CTRL_STATE_TARGET_CHOSEN) {\r\n            if (gp.x === this.currentTarget.gridPos.x &&\r\n                gp.y === this.currentTarget.gridPos.y\r\n            ) {\r\n                // execute attack\r\n                this.currentUnit.eventExecuteAttack(this.currentTarget);\r\n                this.stateDeselect();\r\n                return true;\r\n            } else {\r\n                // not the same gridpos as proposed target, forfeit\r\n                this.stateDeselect();\r\n                return false;\r\n            }\r\n        } else if (this.ctrlState === CTRL_STATE_MA_TARGET_CHOSEN) {\r\n            if (gp.x === this.currentTarget.gridPos.x &&\r\n                gp.y === this.currentTarget.gridPos.y\r\n            ) {\r\n                // execute move assist\r\n\t\t\t\tthis.hGame.eventExecuteMoveAssist(this.currentUnit, this.currentTarget);\r\n                this.stateDeselect();\r\n                return true;\r\n            } else {\r\n                // not the same gridpos as proposed target, forfeit\r\n                this.stateDeselect();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        localAlert(\r\n            \"this alert should not happen due to returns. x: \" +\r\n                gp.x +\r\n                \", y: \" +\r\n                gp.y +\r\n                \";  ctrl state: \" +\r\n                this.ctrlState\r\n        );\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction localAlert(str) {\r\n    // not sure if it really localise or is still global...\r\n    //alert(str);\r\n}\r\n","import AbstractController from \"./abstractController\";\r\n\r\nexport default class InputHandler {\r\n    constructor(game) {\r\n        this.hGame = game;\r\n        this.hCanvas = game.hCanvas;\r\n        this.abstractController = new AbstractController(game, false);\r\n        this.clickPosQueue = [];\r\n\r\n        // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n        this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        this.isApple = /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n        let touchEvent = this.isMobile ? \"touchstart\" : \"click\";\r\n\r\n        this.hCanvas.addEventListener(touchEvent, event => {\r\n            this.mouseClick(this.getMousePosWithinCanvas(event));\r\n            if (this.isMobile) event.preventDefault();\r\n        });\r\n\r\n        if (this.isMobile) {\r\n            this.hCanvas.addEventListener(\"touchmove\", event => {\r\n\t\t\t\tif (event.touches === undefined || event.touches.length === 1)\r\n\t\t\t\t\tevent.preventDefault();\r\n            });\r\n            this.hCanvas.addEventListener(\"touchend\", event => {\r\n\t\t\t\tif (event.touches === undefined || event.touches.length === 1)\r\n\t\t\t\t\tevent.preventDefault();\r\n            });\r\n        }\r\n    }\r\n\r\n    getMousePosWithinCanvas(event) {\r\n        // https://stackoverflow.com/questions/9585487/cant-get-coordinates-of-touchevents-in-javascript-on-android-devices\r\n        // holy crap so if it's a TouchEvent then it can capture more than one touch and store them into an array\r\n        // ah yeah so that's probably how multi-touch works. make sense\r\n        if (event.touches !== undefined) event = event.touches[0];\r\n\r\n        // https://stackoverflow.com/questions/17130395/real-mouse-position-in-canvas\r\n        let rect = this.hCanvas.getBoundingClientRect();\r\n        return {\r\n            x:\r\n                ((event.clientX - rect.left) / (rect.right - rect.left)) *\r\n                this.hCanvas.width,\r\n            y:\r\n                ((event.clientY - rect.top) / (rect.bottom - rect.top)) *\r\n                this.hCanvas.height\r\n        };\r\n    }\r\n\r\n    mouseClick(pos) {\r\n        if (this.hGame.isPhaseBlocked) return;\r\n        if (this.hGame.currentPhase !== this.hGame.PHASE_PLAYER) return;\r\n        this.clickPosQueue.push(pos);\r\n    }\r\n\r\n    update(df) {\r\n        while (df > 0 && this.clickPosQueue.length > 0) {\r\n            df--;\r\n\t\t\tlet pos = this.clickPosQueue.shift();\r\n\t\t\tif (pos.x <= this.hGame.gameWidth && pos.y <= this.hGame.gameHeight) {\r\n\t\t\t\tthis.abstractController.clickGP(this.hGame.posToGridPos(pos));\r\n\t\t\t} else {\r\n\t\t\t\tthis.abstractController.clickButton(this.hGame.findButton(pos));\r\n\t\t\t}\r\n        }\r\n    }\r\n}\r\n","export default class Grid {\r\n    constructor(gridSize, maxGrid) {\r\n        this.gridSize = gridSize;\r\n        this.xMax = maxGrid.x;\r\n        this.yMax = maxGrid.y;\r\n\r\n        this.lineHalfWidth = 1;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.fillStyle = \"#03f\";\r\n        for (let x = 0; x <= this.xMax; x++) {\r\n            ctx.fillRect(\r\n                x * this.gridSize - this.lineHalfWidth,\r\n                0 - this.lineHalfWidth,\r\n                2 * this.lineHalfWidth,\r\n                this.yMax * this.gridSize + 2 * this.lineHalfWidth\r\n            );\r\n        }\r\n\r\n        for (let y = 0; y <= this.yMax; y++) {\r\n            ctx.fillRect(\r\n                0 - this.lineHalfWidth,\r\n                y * this.gridSize - this.lineHalfWidth,\r\n                this.xMax * this.gridSize + 2 * this.lineHalfWidth,\r\n                2 * this.lineHalfWidth\r\n            );\r\n        }\r\n    }\r\n}\r\n","export default class effectStartPhase {\r\n    constructor(hGame, isEnemyPhase) {\r\n        this.frame = 1;\r\n        this.maxFrame = 100;\r\n        this.isEnemyPhase = isEnemyPhase;\r\n        if (isEnemyPhase) this.image = document.getElementById(\"img_effect_EP\");\r\n        else this.image = document.getElementById(\"img_effect_PP\");\r\n        this.drawX = hGame.gameWidth + hGame.gridSize + 20;\r\n        this.drawY =\r\n            (hGame.gridSize * hGame.maxGrid.y) / 2 - this.image.height / 2;\r\n        this.hGame = hGame;\r\n    }\r\n\r\n    update(df) {\r\n        this.frame += df;\r\n        this.drawX -= 22 * df;\r\n        if (this.frame > this.maxFrame) this.hGame.eventEffectEnd(this);\r\n    }\r\n\r\n    draw(ctx) {\r\n        if (this.frame <= this.maxFrame)\r\n            ctx.drawImage(this.image, this.drawX, this.drawY);\r\n    }\r\n}\r\n","export default class effectGameOver {\r\n    constructor(hGame) {\r\n        this.frame = 1;\r\n        this.maxFrame = 200;\r\n\t\tthis.hCanvas = document.getElementById(\"gameScreen\");\r\n\t\tthis.image = document.getElementById(\"img_effect_gameOver\");\r\n        this.drawX = this.hCanvas.width / 2;\r\n        this.drawY = this.hCanvas.height / 2;\r\n\t\tthis.drawScale = 0.05;\r\n\t\tthis.drawAngle = 0;\r\n\t\tthis.phase = 0;\r\n\t\tthis.phaseLength = [50, 180, this.maxFrame];\r\n        this.hGame = hGame;\r\n    }\r\n\r\n    update(df) {\r\n        this.frame += df;\r\n        if (this.frame > this.maxFrame) this.hGame.eventEffectEnd(this);\r\n\t\tif (this.frame >= this.phaseLength[this.phase]) {\r\n\t\t\tthis.phase ++;\r\n\t\t\tif (this.phase === 1) {\r\n\t\t\t\tthis.drawScale = 1;\r\n\t\t\t\tthis.drawAngle = 0;\r\n\t\t\t}\r\n\t\t}\r\n        if (this.phase === 0) {\r\n\t\t\tthis.drawScale += (1 - 0.05) / this.phaseLength[0] * df;\r\n\t\t\tthis.drawAngle += 2 * Math.PI * 5 / this.phaseLength[0] * df;\r\n\t\t}\r\n\t\tif (this.phase === 2) {\r\n\t\t\tthis.drawScale -= df / (this.phaseLength[2] - this.phaseLength[1]);\r\n\t\t}\r\n\r\n    }\r\n\r\n    draw(ctx) {\r\n        if (this.frame <= this.maxFrame) {\r\n\t\t\tlet trX = this.hCanvas.width/2, trY = this.hCanvas.height/2;\r\n\t\t\tctx.translate(trX, trY);\r\n\t\t\tctx.rotate(this.drawAngle);\r\n\t\t\tctx.translate(-trX, -trY);\r\n            ctx.drawImage(\r\n\t\t\t\tthis.image, \r\n\t\t\t\tthis.drawX - this.image.width * this.drawScale / 2, \r\n\t\t\t\tthis.drawY - this.image.height * this.drawScale / 2, \r\n\t\t\t\tthis.image.width * this.drawScale,\r\n\t\t\t\tthis.image.height * this.drawScale,\r\n\t\t\t);\r\n\t\t\tctx.translate(trX, trY);\r\n\t\t\tctx.rotate(-this.drawAngle);\r\n\t\t\tctx.translate(-trX, -trY);\r\n\t\t}\r\n    }\r\n}\r\n","export default class effectStageClear {\r\n    constructor(hGame) {\r\n        this.frame = 1;\r\n        this.maxFrame = 200;\r\n\t\tthis.hCanvas = document.getElementById(\"gameScreen\");\r\n\t\tthis.image = document.getElementById(\"img_effect_stageClear\");\r\n        this.drawX = this.hCanvas.width / 2;\r\n        this.drawY = this.hCanvas.height / 2;\r\n\t\tthis.drawScale = 0.05;\r\n\t\tthis.drawAngle = 0;\r\n\t\tthis.phase = 0;\r\n\t\tthis.phaseLength = [50, 180, this.maxFrame];\r\n        this.hGame = hGame;\r\n    }\r\n\r\n    update(df) {\r\n        this.frame += df;\r\n        if (this.frame > this.maxFrame) this.hGame.eventEffectEnd(this);\r\n\t\tif (this.frame >= this.phaseLength[this.phase]) {\r\n\t\t\tthis.phase ++;\r\n\t\t\tif (this.phase === 1) {\r\n\t\t\t\tthis.drawScale = 1;\r\n\t\t\t\tthis.drawAngle = 0;\r\n\t\t\t}\r\n\t\t}\r\n        if (this.phase === 0) {\r\n\t\t\tthis.drawScale += (1 - 0.05) / this.phaseLength[0] * df;\r\n\t\t\tthis.drawAngle += 2 * Math.PI * 5 / this.phaseLength[0] * df;\r\n\t\t}\r\n\t\tif (this.phase === 2) {\r\n\t\t\tthis.drawScale -= df / (this.phaseLength[2] - this.phaseLength[1]);\r\n\t\t}\r\n\r\n    }\r\n\r\n    draw(ctx) {\r\n        if (this.frame <= this.maxFrame) {\r\n\t\t\tlet trX = this.hCanvas.width/2, trY = this.hCanvas.height/2;\r\n\t\t\tctx.translate(trX, trY);\r\n\t\t\tctx.rotate(this.drawAngle);\r\n\t\t\tctx.translate(-trX, -trY);\r\n            ctx.drawImage(\r\n\t\t\t\tthis.image, \r\n\t\t\t\tthis.drawX - this.image.width * this.drawScale / 2, \r\n\t\t\t\tthis.drawY - this.image.height * this.drawScale / 2, \r\n\t\t\t\tthis.image.width * this.drawScale,\r\n\t\t\t\tthis.image.height * this.drawScale,\r\n\t\t\t);\r\n\t\t\tctx.translate(trX, trY);\r\n\t\t\tctx.rotate(-this.drawAngle);\r\n\t\t\tctx.translate(-trX, -trY);\r\n\t\t}\r\n    }\r\n}\r\n","import AbstractController from \"/src/abstractController\";\r\nimport consts from \"/src/consts\";\r\n\r\n/* don't need this ugly stuff anymore since we have listAttackable[].gpsFrom now\r\n// remember to check 1~maxGrid when using this stuff\r\nlet dAtk = [];\r\ndAtk[0] = [];\r\ndAtk[1] = [{x:0, y:+1}, {x:-1, y:0}, {x:+1, y:0}, {x:0, y:-1} ];\r\ndAtk[2] = [{x:0, y:+2}, {x:-1, y:+1}, {x:+1, y:+1}, {x:-2, y:0},\r\n\t\t\t{x:+2, y:0}, {x:-1, y:-1}, {x:+1, y:-1}, {x:0, y:-2}];\r\n*/\r\nconst MAX_DIST = 100000-1;\r\n\r\nlet zoku = consts.zokusei;\r\n\r\nexport default class EnemyAI {\r\n    constructor(hGame, isEnemy) {\r\n        this.hGame = hGame;\r\n\t\tthis.maxGrid = this.hGame.maxGrid;\r\n\t\t\r\n        this.isEnemy = isEnemy;\r\n        if (this.isEnemy) {\r\n            this.suList = hGame.enemyUnitList;\r\n            this.ouList = hGame.playerUnitList;\r\n        } else {\r\n            this.suList = hGame.playerUnitList;\r\n            this.ouList = hGame.enemyUnitList;\r\n        }\r\n\r\n        this.absCon = new AbstractController(this.hGame, isEnemy);\r\n\t\t\r\n\t\tthis.suPDIR = null; // path data with inf search range\r\n\t\tthis.ouPDIR = null;\r\n\r\n        this.blockFrameRemain = 0;\r\n        this.blockFramePerAttack = 18;\r\n        this.blockFramePerMove = 18;\r\n        this.blockFramePerWait = 10;\r\n    }\r\n\r\n\texecuteEndTurn() {\r\n\t\tthis.absCon.clickButton(consts.buttons.TurnEnd);\r\n\t\tthis.absCon.clickButton(consts.buttons.TurnEnd);\r\n\t\tthis.blockFrameRemain = this.blockFramePerWait;\r\n\t}\r\n\r\n    executeWait(unit) {\r\n        this.absCon.clickGP(unit.gridPos);\r\n        this.absCon.clickButton(consts.buttons.Wait);\r\n\t\tthis.absCon.clickButton(consts.buttons.Wait);\r\n        this.blockFrameRemain = this.blockFramePerWait;\r\n    }\r\n\r\n    executeMove(unit, dest) {\r\n\t\tif (dest.x === unit.gridPos.x && dest.y === unit.gridPos.y) {\r\n\t\t\tthis.executeWait(unit);\r\n\t\t\treturn;\r\n\t\t}\r\n        this.absCon.clickGP(unit.gridPos);\r\n        this.absCon.clickGP(dest);\r\n        this.absCon.clickGP(dest);\r\n        this.blockFrameRemain = this.blockFramePerMove;\r\n    }\r\n\r\n    executeMoveAttack(unit, dest, target) {\r\n        //alert(unit.gridPos.x + \", \" + unit.gridPos.y + \" @ \" + dest.x + \", \" + dest.y + \" vs \"+ target.gridPos.x + \", \" + target.gridPos.y);\r\n        this.absCon.clickGP(unit.gridPos);\r\n        if (dest.x === unit.gridPos.x && dest.y === unit.gridPos.y) {\r\n            this.absCon.clickGP(target.gridPos);\r\n            this.absCon.clickGP(target.gridPos);\r\n        } else {\r\n            this.absCon.clickGP(dest);\r\n            this.absCon.clickGP(target.gridPos);\r\n            this.absCon.clickGP(target.gridPos);\r\n        }\r\n        this.blockFrameRemain = this.blockFramePerAttack;\r\n    }\r\n\t\r\n\tcheckIfGpInMaxGrid(x, y) {\r\n\t\tif (x < 1 || y < 1 || x > this.maxGrid.x || y > this.maxGrid.y) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfindBestAttackPosition(su, target) {\r\n\t\tlet minDist = MAX_DIST;\r\n\t\tlet bestGP = null;\r\n\t\tlet idx = su.pathData.attackable[target.gridPos.x][target.gridPos.y];\r\n\t\tsu.pathData.listAttackable[idx].gpsFrom.forEach(gp => {\r\n\t\t\tif (su.pathData.dist[gp.x][gp.y] < minDist) {\r\n\t\t\t\tlet unit = this.hGame.findUnitByGridPos(gp);\r\n\t\t\t\tif (unit === null || unit.unitID === su.unitID) {\r\n\t\t\t\t\tminDist = su.pathData.dist[gp.x][gp.y];\r\n\t\t\t\t\tbestGP = gp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t//alert(\"/findBestAttackPosition \" + su.unitID + \",\" + target.unitID +\" @(\" + bestGP.x +\",\"+bestGP.y + \")\");\r\n\t\t\r\n\t\treturn bestGP;\r\n\t}\r\n\r\n    findOppoUnitAndAttack(suIdx) {\r\n        let su = this.suList[suIdx];\r\n\t\tlet flagDone = false;\r\n\t\t\r\n        su.pathData.listAttackable.forEach(obj => {\r\n\t\t\tif (flagDone) return;\r\n\t\t\tlet target = this.hGame.findOppoUnitByGridPos(this.isEnemy, obj.gp);\r\n\t\t\tif (target !== null) {\r\n\t\t\t\t//alert(\"found target\");\r\n\t\t\t\tlet destGP = this.findBestAttackPosition(su, target);\r\n\t\t\t\tif (destGP !== null) {\r\n\t\t\t\t\tthis.executeMoveAttack(\r\n\t\t\t\t\t\tsu, \r\n\t\t\t\t\t\tdestGP, \r\n\t\t\t\t\t\ttarget\r\n\t\t\t\t\t);\r\n\t\t\t\t\tflagDone = true;\r\n\t\t\t\t\treturn; // you can't just return true here because it's inside a anonymous func\r\n\t\t\t\t\t\t// the moral is: old for loop RULES\r\n\t\t\t\t}\r\n            }\r\n        });\r\n        return flagDone;\r\n    }\r\n\t\r\n\t//return +1: advantage;  -1: disadvantage;  0: tie or N/A\r\n\tcompareZokusei(su, ou) {\r\n\t\tif (su.params === null || ou.params === null) return 0;\r\n\t\tif (su.params.zokusei === undefined || ou.params.zokusei === undefined) return 0;\r\n\t\tif (su.params.zokusei === zoku.none || ou.params.zokusei === zoku.none) return 0;\r\n\t\tif (su.params.zokusei === zoku.red && ou.params.zokusei === zoku.green ||\r\n\t\t\tsu.params.zokusei === zoku.green && ou.params.zokusei === zoku.blue ||\r\n\t\t\tsu.params.zokusei === zoku.blue && ou.params.zokusei === zoku.red)\r\n\t\t\treturn +1;\r\n\t\tif (ou.params.zokusei === zoku.red && su.params.zokusei === zoku.green ||\r\n\t\t\tou.params.zokusei === zoku.green && su.params.zokusei === zoku.blue ||\r\n\t\t\tou.params.zokusei === zoku.blue && su.params.zokusei === zoku.red)\r\n\t\t\treturn -1;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t// define how zokusei works for deciding chase target\r\n\tzokuseiChasingDistScore(su, ou) {\r\n\t\tlet rate = 1; // replace it when chasing skills are implemented\r\n\t\treturn (-(rate * su.moveDist) - 0.5) * this.compareZokusei(su, ou);\r\n\t}\r\n\r\n\t// for chasing gp tiebreaker\r\n\tgetChasingPosScore(su, gp, target) {\r\n\t\tlet score = 0;\r\n\t\tlet len = this.ouList.length;\r\n\t\tfor (let i = 0; i < len; i ++) {\r\n\t\t\tlet z = this.compareZokusei(su, this.ouList[i]);\r\n\t\t\tscore += 100 * this.ouPDIR[i].dist[gp.x][gp.y] * (-z);\r\n\t\t}\r\n\t\tscore -= Math.abs(\r\n\t\t\tMath.abs(target.gridPos.x - gp.x) - \r\n\t\t\tMath.abs(target.gridPos.y - gp.y)\r\n\t\t);\r\n\t\treturn score;\r\n\t}\r\n\r\n    tryGetClose(suIdx) {\r\n        let su = this.suList[suIdx];\r\n        if (su.pathData.listPossibleDest.length === 0) return false;\r\n\r\n        let minDist = MAX_DIST;\r\n        let bestGP = null;\r\n\t\tlet bestTarget = null;\r\n\t\tlet bestScore = null;\r\n        su.pathData.listPossibleDest.forEach(gp => {\r\n            if (this.hGame.findSelfUnitByGridPos(this.isEnemy, gp) !== null &&\r\n\t\t\t\tthis.hGame.findSelfUnitByGridPos(this.isEnemy, gp) !== su)\r\n                return;\r\n            //alert(\"gp: \" + gp.x + \",\" + gp.y);\r\n            let pdir = this.hGame.pathFinder.floodFill(su, gp, 300, true);\r\n            this.ouList.forEach(target => {\r\n                let distTarget =\r\n                    pdir.dist[target.gridPos.x][target.gridPos.y]\r\n\t\t\t\t\t+ this.zokuseiChasingDistScore(su, target);\r\n                //alert(target.unitID + \",\" + distTarget);\r\n                if (distTarget < minDist) {\r\n                    minDist = distTarget;\r\n                    bestGP = gp;\r\n\t\t\t\t\tbestTarget = target;\r\n\t\t\t\t\tbestScore = this.getChasingPosScore(su, gp, target);\r\n\t\t\t\t\t//alert(target.unitID + \" @ \"+gp.x+\",\"+gp.y+\" : \"+bestScore);\r\n                } else if (distTarget === minDist) {\r\n\t\t\t\t\tlet newScore = this.getChasingPosScore(su, gp, target);\r\n\t\t\t\t\t//alert(target.unitID + \" @ \"+gp.x+\",\"+gp.y+\" : \"+newScore);\r\n\t\t\t\t\tif (newScore > bestScore) {\r\n\t\t\t\t\t\tbestGP = gp;\r\n\t\t\t\t\t\tbestTarget = target;\r\n\t\t\t\t\t\tbestScore = newScore;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            });\r\n        });\r\n        //alert(minDist + \" @ (\" + bestGP.x + \",\" + bestGP.y + \") -> \" + bestTarget.nameStr);\r\n        if (bestGP !== null) {\r\n            this.executeMove(su, bestGP);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\t\r\n\t// behaviour: find su that has minimum dist to an ou.\r\n\t// HOWEVER, if there is an su that can attack an ou from a proper gp, then that su will be chosen.\r\n\tfindClosestUnit() {\r\n\t\tlet minDist = MAX_DIST;\r\n\t\tlet closestUnitIdx = null;\r\n\t\t\r\n\t\tlet len = this.suList.length;\r\n        for (let i = 0; i < len; i++) {\r\n\t\t\tlet su = this.suList[i];\r\n\t\t\tif (!su.isActive()) continue;\r\n\t\t\tthis.ouList.forEach(ou => {\r\n\t\t\t\tif (su.pathData.attackable[ou.gridPos.x][ou.gridPos.y] !== -1) {\r\n\t\t\t\t\tlet gpsFrom = su.pathData.listAttackable[su.pathData.attackable[ou.gridPos.x][ou.gridPos.y]].gpsFrom;\r\n\t\t\t\t\tlet lenLA = gpsFrom.length;\r\n\t\t\t\t\tfor (let j = 0; j < lenLA; j ++) {\r\n\t\t\t\t\t\tlet target = this.hGame.findUnitByGridPos(gpsFrom[j]);\r\n\t\t\t\t\t\tif (target === null) {\r\n\t\t\t\t\t\t\t// this su can attack ou from gpsFrom[j]!!\r\n\t\t\t\t\t\t\t// normally here you should find best attacker & best target\r\n\t\t\t\t\t\t\t// but this is OHKO game so that's probably irrelevant (unless you do omakase)\r\n\t\t\t\t\t\t\tminDist = -1;\r\n\t\t\t\t\t\t\tclosestUnitIdx = i;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet dist = this.suPDIR[i].dist[ou.gridPos.x][ou.gridPos.y];\r\n\t\t\t\t//alert(su.unitID+\" -> \"+ou.unitID +\" = \"+ dist);\r\n\t\t\t\tif (dist < minDist) {\r\n\t\t\t\t\tminDist = dist;\r\n\t\t\t\t\tclosestUnitIdx = i;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn closestUnitIdx;\r\n\t}\r\n\r\n\t// update path data with inf search range\r\n\tupdatePDIR() {\r\n\t\tlet suLen = this.suList.length;\r\n\t\tthis.suPDIR = [];\r\n\t\tfor (let i = 0; i < suLen; i ++) {\r\n\t\t\tthis.suPDIR[i] = this.hGame.pathFinder.floodFill(\r\n\t\t\t\tthis.suList[i], this.suList[i].gridPos, 300, true\r\n\t\t\t);\r\n\t\t}\r\n\t\tlet ouLen = this.ouList.length;\r\n\t\tthis.ouPDIR = [];\r\n\t\tfor (let i = 0; i < ouLen; i ++) {\r\n\t\t\tthis.ouPDIR[i] = this.hGame.pathFinder.floodFill(\r\n\t\t\t\tthis.ouList[i], this.ouList[i].gridPos, 300, true\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n    makeOneMove() {\r\n\t\tthis.updatePDIR();\r\n\t\tlet suIdx = this.findClosestUnit();\r\n\t\tif (suIdx === null) {\r\n\t\t\tsuIdx = this.findFirstActiveSu();\r\n\t\t}\r\n\t\tif (suIdx !== null) {\r\n\t\t\tlet res = this.findOppoUnitAndAttack(suIdx);\r\n\t\t\tif (res === false) res = this.tryGetClose(suIdx);\r\n\t\t\tif (res === false) this.executeWait(this.suList[suIdx]);\r\n\t\t} else {\r\n\t\t\tthis.executeEndTurn();\r\n\t\t}\r\n    }\r\n\t\r\n\tfindFirstActiveSu() {\r\n\t\tlet len = this.suList.length;\r\n\t\tfor (let i = 0; i < len; i ++) {\r\n\t\t\tif (this.suList[i].isActive()) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n    update(df) {\r\n        this.blockFrameRemain -= df;\r\n        if (this.blockFrameRemain <= 0) {\r\n            this.makeOneMove();\r\n        }\r\n    }\r\n}\r\n","const dx = [0, -1, +1, 0];\r\nconst dy = [+1, 0, 0, -1];\r\nlet dAtk = [];\r\ndAtk[0] = [];\r\ndAtk[1] = [{x:0, y:+1}, {x:-1, y:0}, {x:+1, y:0}, {x:0, y:-1} ];\r\ndAtk[2] = [{x:0, y:+2}, {x:-1, y:+1}, {x:+1, y:+1}, {x:-2, y:0},\r\n\t\t\t{x:+2, y:0}, {x:-1, y:-1}, {x:+1, y:-1}, {x:0, y:-2}];\r\nconst MAX_DIST = 100000;\r\n\r\nexport default class PathFinder {\r\n    constructor(hGame) {\r\n        this.hGame = hGame;\r\n        this.maxGrid = hGame.maxGrid;\r\n        this.eList = hGame.enemyUnitList;\r\n        this.pList = hGame.playerUnitList;\r\n        this.hStage = hGame.stage;\r\n\r\n        this.visited = null;\r\n        this.path = null;\r\n    }\r\n\r\n    /* \r\n        Main service of PathFinder.\r\n        return an object pathData := {\r\n\t\t\tprev[x][y] := (gp) gp of parent node in the path tree.\r\n\t\t\tdist[x][y] := (int) dist from startGP.\r\n\t\t\tlistPossibleDest := [] of reachable gp. NOTE: MIGHT HAVE OTHER UNITS\r\n\t\t\tattackable[x][y] := (int) whether that gp can be attacked by the unit.\r\n\t\t\t\t\t\t\t\t-1 means not attackable.\r\n\t\t\t\t\t\t\t\tthe value is also the index of x,y @ listAttackable\r\n\t\t\tlistAttackable := [{gp, gpsFrom}]. ~.gpsFrom is [] of gps where you can\r\n\t\t\t\t\t\t\t\tattack ~.gp. NOTE: THEY MIGHT BE BLOCKED BY OTHER UNITS\r\n\t\t}\r\n    */\r\n    floodFill(\r\n\t\tunit, startGP, \r\n\t\tsearchRange, \r\n\t\tflagIgnoreEnemyUnit = false\r\n\t) {\r\n        let prev = [];\r\n        let dist = [];\r\n\t\tlet attackable = [];\r\n        for (let i = 1; i <= this.maxGrid.x; i++) {\r\n            prev[i] = [];\r\n            dist[i] = [];\r\n            attackable[i] = [];\r\n            for (let j = 1; j <= this.maxGrid.y; j++) {\r\n                dist[i][j] = MAX_DIST;\r\n                prev[i][j] = null;\r\n                attackable[i][j] = -1;\r\n            }\r\n        }\r\n\r\n        let queue = [];\r\n        let head = 1,\r\n            tail = 0;\r\n        queue[head] = startGP;\r\n        prev[startGP.x][startGP.y] = startGP;\r\n        dist[startGP.x][startGP.y] = 0;\r\n        let listPossibleDest = [];\r\n        listPossibleDest.push(startGP);\r\n\t\tlet listAttackable = [];\r\n\t\t\r\n\t\tlet dAttacks = dAtk[unit.attackRange];\r\n\t\tthis.addAttackable(dAttacks, attackable, listAttackable, startGP);\r\n\r\n        while (head > tail) {\r\n            tail++;\r\n            if (dist[queue[tail].x][queue[tail].y] >= searchRange) continue;\r\n            for (let i = 0; i < 4; i++) {\r\n                let xNew = queue[tail].x + dx[i];\r\n                let yNew = queue[tail].y + dy[i];\r\n                if (\r\n                    xNew >= 1 &&\r\n                    xNew <= this.maxGrid.x &&\r\n                    yNew >= 1 &&\r\n                    yNew <= this.maxGrid.y &&\r\n                    dist[xNew][yNew] === MAX_DIST\r\n                ) {\r\n                    let gpNew = { x: xNew, y: yNew };\r\n                    if (unit.checkPassable(gpNew, flagIgnoreEnemyUnit)) {\r\n                        head++;\r\n                        queue[head] = gpNew;\r\n                        dist[xNew][yNew] = dist[queue[tail].x][queue[tail].y] + 1;\r\n                        prev[xNew][yNew] = queue[tail];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.addAttackable(dAttacks, attackable, listAttackable, gpNew);\r\n\t\t\t\t\t\t\r\n                        listPossibleDest.push(gpNew);\r\n                    }\r\n                    //alert(xNew + \",\" + yNew + \",\" + dist[xNew][yNew]);\r\n                }\r\n            }\r\n        }\r\n        let pathData = { \r\n\t\t\tprev: prev, \r\n\t\t\tdist: dist, \r\n\t\t\tlistPossibleDest: listPossibleDest,\r\n\t\t\tattackable: attackable,\r\n\t\t\tlistAttackable: listAttackable\r\n\t\t};\r\n\t\treturn pathData;\r\n    }\r\n\r\n    /*\r\n        Minor service. Tells from pathData whether goalGP is reachable.\r\n    */\r\n    isReachable(pathData, goalGP) {\r\n        return pathData.dist[goalGP.x][goalGP.y] !== MAX_DIST;\r\n    }\r\n\r\n    /*\r\n        Main service. Extract the path starting from startGP to goalGP\r\n        from pathData. \r\n        path[0] should always be startGP if done correctly.\r\n        goalGP is NOT included in the path.\r\n    */\r\n    retrievePath(pathData, startGP, goalGP) {\r\n        let prev = pathData.prev;\r\n        if (prev[goalGP.x][goalGP.y] !== null) {\r\n            let x = goalGP.x,\r\n                y = goalGP.y;\r\n            let dist = 0;\r\n            //alert(x + \",\" + y);\r\n            while (x !== startGP.x || y !== startGP.y) {\r\n                dist++;\r\n                let xNew = prev[x][y].x;\r\n                y = prev[x][y].y;\r\n                x = xNew;\r\n                //alert(x + \",\" + y);\r\n            }\r\n            let path = [];\r\n            x = goalGP.x;\r\n            y = goalGP.y;\r\n            for (let i = 0; i < dist; i++) {\r\n                path[dist - i - 1] = prev[x][y];\r\n                let xNew = prev[x][y].x;\r\n                y = prev[x][y].y;\r\n                x = xNew;\r\n            }\r\n            return path;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\t// unused\r\n    findPath(unit, startGP, goalGP) {\r\n        let pathData = this.floodFill(unit, startGP, unit.moveDist);\r\n        //alert(startGP.x + \",\" + startGP.y + \",\" + goalGP.x + \",\" + goalGP.y);\r\n        return this.retrievePath(pathData, startGP, goalGP);\r\n    }\r\n\t\r\n\t// private methods\r\n\tcheckIfGpInMaxGrid(x, y) {\r\n\t\tif (x < 1 || y < 1 || x > this.maxGrid.x || y > this.maxGrid.y) return false;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\taddAttackable(dAttacks, attackable, listAttackable, gp)\r\n\t{\r\n\t\tdAttacks.forEach(dgp => {\r\n\t\t\t//alert(dgp.x +\",\"+ dgp.y +\",\"+ gp.x +\",\"+  gp.y)\r\n\t\t\tif (this.checkIfGpInMaxGrid(gp.x + dgp.x, gp.y + dgp.y)) {\r\n\t\t\t\tif (attackable[gp.x + dgp.x][gp.y + dgp.y] === -1) {\r\n\t\t\t\t\tattackable[gp.x + dgp.x][gp.y + dgp.y] = listAttackable.length;\r\n\t\t\t\t\tlistAttackable.push({\r\n\t\t\t\t\t\tgp: {x : gp.x + dgp.x, y : gp.y + dgp.y},\r\n\t\t\t\t\t\tgpsFrom: [gp]\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlistAttackable[attackable[gp.x + dgp.x][gp.y + dgp.y]].gpsFrom.push(gp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","let BUTTON_OFFSET_X = 10;\r\n\r\n/*\r\n\tHow to add button:\r\n\tUsually, you don't need to change this file.\r\n\t(1) Add the button in Game.makeButtons().\r\n\t(2) Add consts.buttons entry.\r\n\t(3) Add button trigger in AbsCon.clickButton().\r\n\t(4) Implement the functionality of button in Game, UnitBase, etc.\r\n*/\r\n\r\nexport default class Button {\r\n\tconstructor (hGame, imgString, id, drawGP) {\r\n\t\tthis.hGame = hGame;\r\n\t\tthis.img = document.getElementById(imgString);\r\n\t\t\r\n\t\tthis.buttonID = id;\r\n\t\tthis.drawGP = drawGP;\r\n\t\t\r\n\t\tthis.pos = this.hGame.gridPosToPos(drawGP);\r\n\t\t//alert(this.pos.x + \", \" +this.pos.y);\r\n\t\t\r\n\t\tthis.drawScale = 1;\r\n\t\tthis.drawScaleMax = 1;\r\n\t\t\r\n\t}\r\n\t\r\n\tcheckClick(pos) {\r\n\t\tif (pos.x >= BUTTON_OFFSET_X + this.pos.x - this.hGame.gridSize * this.drawScale * 0.5\r\n\t\t\t&& pos.y >= this.pos.y - this.hGame.gridSize * this.drawScale * 0.5\r\n\t\t\t&& pos.x <= BUTTON_OFFSET_X + this.pos.x + this.hGame.gridSize * this.drawScale * 0.5\r\n\t\t\t&& pos.y <= this.pos.y + this.hGame.gridSize * this.drawScale * 0.5\r\n\t\t)\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\teventClick() {\r\n\t\tthis.drawScale = 0.7;\r\n\t}\r\n\t\r\n\tupdate(df) {\r\n\t\tif (this.drawScale < this.drawScaleMax)\r\n\t\t\tthis.drawScale = Math.min(this.drawScale + df * 0.02, this.drawScaleMax);\r\n\t}\r\n\t\r\n\tdraw(ctx) {\r\n\t\tctx.drawImage(\r\n\t\t\tthis.img, \r\n\t\t\tBUTTON_OFFSET_X + this.pos.x - this.hGame.gridSize * this.drawScale * 0.5, \r\n\t\t\tthis.pos.y - this.hGame.gridSize * this.drawScale * 0.5, \r\n\t\t\tthis.hGame.gridSize*this.drawScale,\r\n\t\t\tthis.hGame.gridSize*this.drawScale\r\n\t\t);\r\n\t}\r\n}","import consts from \"/src/consts\";\r\nlet T = consts.terrainTypes;\r\n\r\nexport default class Stage {\r\n    constructor(maxGrid, terrainMap, unitList, nameStr) {\r\n        this.maxGrid = maxGrid;\r\n        this.terrainMap = terrainMap; // NOTE: use it as [y-1][x-1] !! or getTerrain(x,y)\r\n        this.unitList = unitList;\r\n\t\tthis.nameStr = nameStr;\r\n\r\n        this.imageCache = [];\r\n        this.hGame = null; \t// should not be initialised in constructor \r\n\t\t\t\t\t\t\t// because it's called by stage scripts rather than game\r\n    }\r\n\r\n    initStage(hGame) {\r\n        this.hGame = hGame;\r\n        // push stuffs into game by calling events\r\n        this.unitList.forEach(unit => {\r\n            if (unit.appearTurn === 0)\r\n                hGame.eventPlaceUnit(\r\n\t\t\t\t\tunit.gridPos, unit.isEnemy, unit.typeID, unit.params\r\n\t\t\t\t);\r\n        });\r\n\r\n        this.imageCache[T.Nrm] = document.getElementById(\"img_terrain_grass\");\r\n        this.imageCache[T.Mnt] = document.getElementById(\"img_terrain_yama\");\r\n        this.imageCache[T.Wtr] = document.getElementById(\"img_terrain_kawa\");\r\n    }\r\n\t\r\n\tendTurn(hGame) {\r\n        this.unitList.forEach(unit => {\r\n            if (\r\n                unit.appearTurn === hGame.turn &&\r\n                unit.isEnemy === (hGame.currentPhase === hGame.PHASE_ENEMY)\r\n            )\r\n                hGame.eventPlaceUnit(\r\n\t\t\t\t\tunit.gridPos, unit.isEnemy, unit.typeID, unit.params\r\n\t\t\t\t);\r\n        });\r\n    }\r\n\r\n    getTerrain(x, y) {\r\n        return this.terrainMap[y - 1][x - 1];\r\n    }\r\n\r\n    update(df) {}\r\n\r\n    draw(ctx) {\r\n        for (let i = 1; i <= this.maxGrid.x; i++) {\r\n            for (let j = 1; j <= this.maxGrid.y; j++) {\r\n                let pos = this.hGame.gridPosToPos({ x: i, y: j });\r\n                //alert(i + \",\" + j + \", \" + [this.terrainMap[j][i]]);\r\n                ctx.drawImage(\r\n                    this.imageCache[this.getTerrain(i, j)],\r\n                    pos.x - this.hGame.gridSize / 2,\r\n                    pos.y - this.hGame.gridSize / 2,\r\n                    this.hGame.gridSize,\r\n                    this.hGame.gridSize\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"古の「Stage 04」\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Wtr, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Wtr, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Nrm],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 2, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pTomato,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pCabbage,\r\n\t\tparams: {}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 1, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eCavBow,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 1, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 1, y: 5 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {}\r\n    },\r\n    {\r\n        gridPos: { x: 6, y: 5 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {}\r\n    },\r\n\t{\r\n        gridPos: { x: 6, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {}\r\n    }\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Reinforcement Test\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 2, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pTomato,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pCabbage,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eCavBow,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 8 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 8 },\r\n        appearTurn: 1,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    }\r\n];\r\n\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Barrier Test\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 2, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pTomato,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pCabbage,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\r\n\t// 5\r\n    {\r\n        gridPos: { x: 3, y: 5 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 5 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [5, 7]\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 1, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [5]\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [6, 8]\r\n\t\t}\r\n    }\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-0 初戦\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Mnt, T.Mnt, T.Mnt, T.Mnt, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Wtr, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 2, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 5, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    }\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-1 電光石火\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Wtr, T.Wtr, T.Wtr, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Nrm, T.Wtr, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 5, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    }\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-2 分断の術\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 3, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    }\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-3 包囲\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 4, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 1, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 1, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 5 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 6, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 6, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-4 狩り人\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Wtr, T.Wtr, T.Wtr, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 1, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 1, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 1, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-5 分断の術II\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Mnt, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Mnt],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 2, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t\r\n\t{\r\n        gridPos: { x: 4, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t\r\n\t\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 0-6 包囲II\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Wtr],\r\n    [T.Nrm, T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n    {\r\n        gridPos: { x: 6, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 6, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 5, y: 2 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 6, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 1, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 3, y: 8 },\r\n        appearTurn: 0,\r\n        isEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n    },\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 1-1 バリアー！\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 4, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n\t{\r\n\t\tgridPos: { x: 2, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [4]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 2, y: 7 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [2]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 1-2 難敵\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Wtr, T.Nrm],\r\n    [T.Wtr, T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Wtr, T.Nrm, T.Nrm],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 4, y: 1 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\r\n\t{\r\n\t\tgridPos: { x: 1, y: 1 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [3,4,5,6]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 1, y: 5 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 5 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 2, y: 8 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 8 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 1-3 差し伸べる手\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 2, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 5, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\r\n\t{\r\n\t\tgridPos: { x: 1, y: 7 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 2, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 7 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 7 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 8 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [5]\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 1-4 待ち伏せ\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Mnt, T.Mnt, T.Nrm, T.Mnt, T.Mnt],\r\n\t[T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 4, y: 3 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 4 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\r\n\t{\r\n\t\tgridPos: { x: 5, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [7]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 6 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"Stage 1-5 分断の術III\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Nrm],\r\n\t[T.Nrm, T.Nrm, T.Wtr, T.Wtr, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Mnt, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt],\r\n    [T.Mnt, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Mnt]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 4, y: 6 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue\r\n\t\t}\r\n    },\r\n\r\n\t{\r\n\t\tgridPos: { x: 5, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [5]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [8]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 2, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [3]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [6]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 2 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [7]\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import Stage from \"/src/stage\";\r\nimport consts from \"/src/consts\";\r\n\r\nlet T = consts.terrainTypes;\r\nlet U = consts.unitTypes;\r\n\r\nlet nameStr = \"「あびす丸」\";\r\n\r\nlet maxGrid = { x: 6, y: 8 };\r\nlet terrainMap = [\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Mnt, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Mnt, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n\t[T.Nrm, T.Nrm, T.Mnt, T.Mnt, T.Nrm, T.Nrm],\r\n    [T.Wtr, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Nrm, T.Wtr],\r\n    [T.Nrm, T.Nrm, T.Nrm, T.Wtr, T.Nrm, T.Nrm]\r\n];\r\n\r\nlet unitList = [\r\n    {\r\n        gridPos: { x: 3, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pRizaruto,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.none,\r\n\t\t}\r\n    },\r\n\t{\r\n        gridPos: { x: 2, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pTomato,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 4, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pBlueberry,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n    },\r\n    {\r\n        gridPos: { x: 5, y: 7 },\r\n        appearTurn: 0,\r\n        isEnemy: false,\r\n\t\ttypeID: U.pCabbage,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t}\r\n    },\r\n\r\n\t// 5\r\n\t{\r\n\t\tgridPos: { x: 1, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [6]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 3 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [7]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 1 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 1 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [5]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 4 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [8]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 4 },\r\n\t\tappearTurn: 0,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [8]\r\n\t\t}\r\n\t},\r\n\t\r\n\t// 11\r\n\t{\r\n\t\tgridPos: { x: 1, y: 1 },\r\n\t\tappearTurn: 1,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavBow,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [12, 14]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 1 },\r\n\t\tappearTurn: 1,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [10, 9]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 1 },\r\n\t\tappearTurn: 1,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavBow,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [12, 14]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 1, y: 8 },\r\n\t\tappearTurn: 1,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavBow,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [12]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 1 },\r\n\t\tappearTurn: 1,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [14]\r\n\t\t}\r\n\t},\r\n\t\r\n\t// 16\r\n\t{\r\n\t\tgridPos: { x: 5, y: 7 },\r\n\t\tappearTurn: 2,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [17]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 8 },\r\n\t\tappearTurn: 2,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [18]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 7 },\r\n\t\tappearTurn: 2,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [19]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 6 },\r\n\t\tappearTurn: 2,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [20]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 8 },\r\n\t\tappearTurn: 2,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eDKAxe,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t\tbarrier: [13]\r\n\t\t}\r\n\t},\r\n\t\r\n\t//21\r\n\t{\r\n\t\tgridPos: { x: 1, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eArcher,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.green,\r\n\t\t\tbarrier: [22, 23, 24, 25, 26]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 2, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 3, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 4, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 5, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.red,\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 1 },\r\n\t\tappearTurn: 3,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eKenshi,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t}\r\n\t},\r\n\t\r\n\t// 27\r\n\t{\r\n\t\tgridPos: { x: 1, y: 1 },\r\n\t\tappearTurn: 4,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [26],\r\n\t\t\tskills: [{\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, ]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 1, y: 8 },\r\n\t\tappearTurn: 4,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [26],\r\n\t\t\tskills: [{\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, ]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 1 },\r\n\t\tappearTurn: 4,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [26],\r\n\t\t\tskills: [{\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, ]\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tgridPos: { x: 6, y: 8 },\r\n\t\tappearTurn: 4,\r\n\t\tisEnemy: true,\r\n\t\ttypeID: U.eCavLance,\r\n\t\tparams: {\r\n\t\t\tzokusei: consts.zokusei.blue,\r\n\t\t\tbarrier: [26],\r\n\t\t\tskills: [{\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, {\r\n\t\t\t\tskill: \"extraMovement\",\r\n\t\t\t\tlevel: 1\r\n\t\t\t}, ]\r\n\t\t}\r\n\t},\r\n];\r\n\r\nexport default {nameStr: nameStr, stageCreator: function () {\r\n\treturn new Stage(maxGrid, terrainMap, unitList, nameStr);\r\n}}\r\n\r\n","import OldStage04 from \"/src/stages/oldStage04\";\r\nimport StageTestReinforcement from \"/src/stages/test_reinforcement\";\r\nimport StageTestBarrier from \"/src/stages/test_barrier\";\r\n\r\nimport Stage0000 from \"/src/stages/stage_0_0\";\r\nimport Stage0001 from \"/src/stages/stage_0_1\";\r\nimport Stage0002 from \"/src/stages/stage_0_2\";\r\nimport Stage0003 from \"/src/stages/stage_0_3\";\r\nimport Stage0004 from \"/src/stages/stage_0_4\";\r\nimport Stage0005 from \"/src/stages/stage_0_5\";\r\nimport Stage0006 from \"/src/stages/stage_0_6\";\r\nimport Stage0101 from \"/src/stages/stage_1_1\";\r\nimport Stage0102 from \"/src/stages/stage_1_2\";\r\nimport Stage0103 from \"/src/stages/stage_1_3_easy\";\r\nimport Stage0104 from \"/src/stages/stage_1_4\";\r\nimport Stage0105 from \"/src/stages/stage_1_5\";\r\nimport Abysmal from \"/src/stages/abysmal\";\r\n\r\n/*\r\n\tWhen adding a new stage:\r\n\t(1) import it above\r\n\t(2) push it into this.list @ constructor\r\n*/\r\n\r\nexport default class StageList {\r\n\tconstructor () {\r\n\t\tthis.list = [];\r\n\t\tthis.defaultStageIdx = 0;\r\n\t\t\r\n\t\tthis.list.push(Stage0000);\r\n\t\tthis.list.push(Stage0001);\r\n\t\tthis.list.push(Stage0002);\r\n\t\tthis.list.push(Stage0003);\r\n\t\tthis.list.push(Stage0004);\r\n\t\tthis.list.push(Stage0005);\r\n\t\tthis.list.push(Stage0006);\r\n\t\tthis.list.push(Stage0101);\r\n\t\tthis.list.push(Stage0102);\r\n\t\tthis.list.push(Stage0103);\r\n\t\tthis.list.push(Stage0104);\r\n\t\tthis.list.push(Stage0105);\r\n\t\t\r\n\t\tthis.list.push(OldStage04);\r\n\t\tthis.list.push(Abysmal);\r\n\t\tthis.list.push(StageTestBarrier);\r\n\t\tthis.list.push(StageTestReinforcement);\r\n\t}\r\n\t\r\n\tloadStage(idxStr, hGame) {\r\n\t\tlet stage = this.list[parseInt(idxStr)];\r\n\t\t//alert(stageClass + \", \" + \"Stage \"+idxStr);\r\n\t\thGame.stage = stage.stageCreator();\r\n\t}\r\n\t\r\n\tgetStageListStringForMapSelecter() {\r\n\t\tlet str = `Map:\r\n\t\t<select id=\"divMapSelecter_list\">`;\r\n\t\t\r\n\t\tlet len = this.list.length;\r\n\t\tfor (let i = 0; i < len; i ++) {\r\n\t\t\tstr += `<option value=\"`+ i \r\n\t\t\t+ (i === this.defaultStageIdx ? `\" selected` : `\"`)\r\n\t\t\t+`>` + this.list[i].nameStr + `</option>`;\r\n\t\t}\r\n\t\t\r\n\t\tstr += `</select>\r\n\t\t<button id=\"divMapSelecter_confirm\">Confirm</button>\r\n\t\t<br />\r\n\t\t`;\r\n\t\treturn str;\r\n\t}\r\n\t\r\n}","import consts from \"/src/consts\";\r\n\r\nlet terrainTypes = consts.terrainTypes;\r\n\r\nexport default class UnitBase {\r\n    constructor(unitID, hGame, gridPos, isEnemy) {\r\n        this.unitID = unitID;\r\n        this.hGame = hGame;\r\n        this.gridPos = gridPos;\r\n\r\n\t\tthis.nameStr = \"nannhidaman\";\r\n\t\tthis.imageID = \"img_kenshi\";\r\n        this.imageSize = {\r\n            x: hGame.gridSize,\r\n            y: hGame.gridSize\r\n        };\r\n\t\t\r\n        this.isEnemy = isEnemy;\r\n\r\n\t\tthis.staminaMax = 1;\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 1;\r\n\t\tthis.params = null;\r\n\t\tthis.moveType = consts.moveTypes.infantry;\r\n\t\t\r\n        this.pathData = null;\r\n\t\tthis.skillList = [];\r\n    }\r\n\t\r\n\tcreateSkills() {\r\n\t\tif (this.params !== null && \r\n\t\t\ttypeof(this.params.skills) !== \"undefined\" &&\r\n\t\t\tthis.params.skills !== null\r\n\t\t) {\r\n\t\t\tthis.params.skills.forEach(skillLevelPair => {\r\n\t\t\t\tlet newSkill = this.hGame.skillCreator.createSkill(\r\n\t\t\t\t\tthis, \r\n\t\t\t\t\tskillLevelPair.skill,\r\n\t\t\t\t\tskillLevelPair.level,\r\n\t\t\t\t);\r\n\t\t\t\tif (newSkill.isFighterSkill === true && this.isFighter === false) return;\r\n\t\t\t\tthis.skillList.push(newSkill);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tapplyPassiveSkills() {\r\n\t\tthis.skillList.forEach(skill => {\r\n\t\t\tif (skill.isPassive === true) {\r\n\t\t\t\tskill.applyOnce();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t// need to be called manually by Game after creation\r\n\tinitAfterCreation() {\r\n\t\tthis.createSkills();\r\n\t\tthis.applyPassiveSkills();\r\n\t\t\r\n\t\tthis.image = document.getElementById(this.imageID);\r\n\t\t\r\n\t\tlet zokuStr = \"img_effect_zoku_grey\";\r\n\t\tif (this.params !== null && this.params.zokusei !== undefined) {\r\n\t\t\tif (this.params.zokusei === consts.zokusei.red) zokuStr = \"img_effect_zoku_red\";\r\n\t\t\tif (this.params.zokusei === consts.zokusei.blue) zokuStr = \"img_effect_zoku_blue\";\r\n\t\t\tif (this.params.zokusei === consts.zokusei.green) zokuStr = \"img_effect_zoku_green\";\r\n\t\t}\r\n\t\tthis.imageZokusei = document.getElementById(zokuStr);\r\n\t\t\r\n\t\tthis.hp = 1;\r\n        this.attack = 255;\r\n        this.alive = true;\r\n\t\tthis.stamina = 0;\r\n\t\tthis.moveDist = this.moveDistMax;\r\n\t\t\r\n\t\tthis.updateCoordinate();\r\n\t\t\r\n\t\tthis.resetControlState();\r\n\t\tthis.resetProposal();\r\n\t\t\r\n\t\tif (consts.settings.showUnitID === true) {\r\n\t\t\tthis.nameStr = this.nameStr + \" (\" + this.unitID + \")\";\r\n\t\t}\r\n\t}\r\n\r\n    resetControlState() {\r\n        this.drawScale = 1;\r\n        this.isSelected = false;\r\n        this.isTargeted = false;\r\n    }\r\n\r\n    resetProposal() {\r\n        this.hasDestProposal = false;\r\n        this.destProposalGP = null;\r\n        this.destProposalCoord = null;\r\n        this.pathToDestProposal = null;\r\n        this.pathToDestProposalCoord = null;\r\n        this.hasTargetProposal = false;\r\n        this.targetProposal = null;\r\n        this.isTargeted = false;\r\n    }\r\n\r\n    isActive() {\r\n        if (this.stamina <= 0) return false;\r\n        return true;\r\n    }\r\n\r\n\tisAlive() {\r\n\t\treturn (this.hp > 0);\r\n\t}\r\n\r\n    eventNewTurn() {\r\n        // reset stamina\r\n        this.stamina = this.staminaMax;\r\n\r\n        // reset buffs & debuffs?\r\n        this.moveDist = this.moveDistMax;\r\n    }\r\n\r\n\t// super important stuff\r\n    eventRequirePathUpdate() {\r\n        this.updatePathData();\r\n    }\r\n\r\n    updatePathData() {\r\n        this.pathData = this.hGame.pathFinder.floodFill(\r\n            this,\r\n            this.gridPos,\r\n            this.moveDist\r\n        );\r\n    }\r\n\r\n    eventSelect() {\r\n        this.isSelected = true;\r\n        this.drawScale = 1.15;\r\n    }\r\n\r\n    eventDeselect() {\r\n        this.resetControlState();\r\n        this.resetProposal();\r\n    }\r\n\r\n\tcheckTerrain(gridPos) {\r\n\t\tif (this.moveType === consts.moveTypes.flyer) return true;\r\n\t\t\r\n\t\tif (this.hGame.stage.getTerrain(gridPos.x, gridPos.y) !==\r\n            terrainTypes.Nrm\r\n        ) \treturn false;\r\n\r\n        return true;\r\n\t}\r\n\r\n\t// for MoveAssist.checkEligibility\r\n\tcheckStopable(gridPos, ignoreUnit) {\r\n\t\tlet unit = this.hGame.findUnitByGridPos(gridPos);\r\n\t\tif (unit !== null && \r\n\t\t\tunit !== ignoreUnit &&\r\n\t\t\tunit !== this\r\n\t\t) return false;\r\n\t\t\r\n\t\treturn this.checkTerrain(gridPos);\r\n\t}\r\n\r\n    checkPassable(gridPos, flagIgnoreEnemyUnit = false) {\r\n        // movement types vs terrains, pass skill vs enemy etc.\r\n        if (!flagIgnoreEnemyUnit &&\r\n            this.hGame.findOppoUnitByGridPos(this.isEnemy, gridPos) !== null\r\n        )\treturn false;\r\n\r\n        return this.checkTerrain(gridPos);\r\n    }\r\n\r\n    checkMoveDestination(gridPos) {\r\n        if (\r\n            Math.abs(gridPos.x - this.gridPos.x) +\r\n                Math.abs(gridPos.y - this.gridPos.y) >\r\n            this.moveDistMax\r\n        )\r\n            return false;\r\n\r\n        if (this.hGame.pathFinder.isReachable(this.pathData, gridPos)) {\r\n            //this.acceptPath(path);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\t\r\n    acceptPath(path) {\r\n        this.pathToDestProposal = path;\r\n        this.pathToDestProposalCoord = [];\r\n        let len = path.length;\r\n        for (let i = 0; i < len; i++) {\r\n            //alert(i + \",\" + path[i].x + \",\" + path[i].y);\r\n            this.pathToDestProposalCoord[i] = this.hGame.gridPosToPos(path[i]);\r\n        }\r\n    }\r\n\r\n    eventProposeDestination(destGP) {\r\n        this.hasDestProposal = true;\r\n        this.destProposalGP = destGP;\r\n        this.destProposalCoord = this.hGame.gridPosToPos(destGP);\r\n        this.acceptPath(\r\n            this.hGame.pathFinder.retrievePath(\r\n                this.pathData,\r\n                this.gridPos,\r\n                destGP\r\n            )\r\n        );\r\n    }\r\n\r\n    executeAction() {\r\n        this.stamina--;\r\n        this.resetProposal();\r\n        this.hGame.eventActionExecuted();\r\n    }\r\n\r\n\t// possibly the stupidest thing in this class\r\n\tupdateCoordinate() {\r\n\t\tthis.coordinate = this.hGame.gridPosToPos(this.gridPos);\r\n\t}\r\n\r\n    eventExecuteMovement() {\r\n\t\tthis.stamina = 1; // to make sure it becomes 0 after executeAction\r\n        this.gridPos = this.destProposalGP;\r\n        this.updateCoordinate();\r\n        this.executeAction();\r\n    }\r\n\t\r\n\teventUseMoveAssist(gpNew) {\r\n\t\tthis.gridPos = gpNew;\r\n\t\tthis.updateCoordinate();\r\n\t\tthis.executeAction();\r\n\t}\r\n\t\r\n\teventMovedByMoveAssist(gpNew) {\r\n\t\tthis.gridPos = gpNew;\r\n\t\tthis.updateCoordinate();\r\n\t}\r\n\t\r\n\t// used in e.g. resolving reinforcement conflict\r\n\teventForceMovement(gpNew) {\r\n\t\tthis.gridPos = gpNew;\r\n\t\tthis.updateCoordinate();\r\n\t}\r\n\r\n    checkAttackTarget(unit, destProposalGP) {\r\n\t\tif (this.attackRange === 0) return false;\r\n        if (Math.abs(unit.gridPos.x - destProposalGP.x) +\r\n            Math.abs(unit.gridPos.y - destProposalGP.y) ===\r\n            this.attackRange\r\n        )\treturn true;\r\n        return false;\r\n    }\r\n\r\n    eventProposeTarget(unit) {\r\n        this.targetProposal = unit;\r\n        this.hasTargetProposal = true;\r\n    }\r\n\r\n    eventBeTargeted() {\r\n        this.isTargeted = true;\r\n    }\r\n\r\n    eventStopBeingTargeted() {\r\n        this.isTargeted = false;\r\n    }\r\n\r\n    eventExecuteAttack(unit) {\r\n        this.gridPos = this.destProposalGP;\r\n        this.updateCoordinate();\r\n        this.hGame.eventBattle(this, unit);\r\n        this.executeAction();\r\n    }\r\n\r\n    eventExecuteWait() {\r\n\t\tthis.stamina = 1; // to make sure it becomes 0 after executeAction\r\n        this.executeAction();\r\n    }\r\n\r\n    eventLoseHP(damage) {\r\n        this.hp -= damage;\r\n        if (this.hp <= 0) {\r\n            this.alive = false;\r\n            this.hGame.eventUnitDeath(this);\r\n        }\r\n    }\r\n\r\n    isInPhase() {\r\n        let flag = (\r\n            this.isEnemy && (this.hGame.currentPhase === this.hGame.PHASE_ENEMY) ||\r\n            !this.isEnemy && (this.hGame.currentPhase === this.hGame.PHASE_PLAYER) \r\n        );\r\n\t\treturn flag;\r\n    }\r\n\r\n    update(df) {}\r\n\t\r\n\tdrawThreat(ctx) {\r\n\t\tif (this.isSelected) {\r\n\t\t\tctx.fillStyle = \"rgba(255,238,238,0.8)\";\r\n\t\t\tthis.pathData.listAttackable.forEach(obj => {\r\n\t\t\t\tif (!this.hGame.pathFinder.isReachable(this.pathData, obj.gp)) {\r\n\t\t\t\t\tlet pos = this.hGame.gridPosToPos(obj.gp);\r\n\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\tpos.x - this.imageSize.x * 0.45,\r\n\t\t\t\t\t\tpos.y - this.imageSize.y * 0.45,\r\n\t\t\t\t\t\tthis.imageSize.x * 0.9,\r\n\t\t\t\t\t\tthis.imageSize.y * 0.9\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tctx.fillStyle = \"rgba(238,238,255,0.5)\";\r\n\t\t\tthis.pathData.listPossibleDest.forEach(gp => {\r\n\t\t\t\tlet pos = this.hGame.gridPosToPos(gp);\r\n\t\t\t\tctx.fillRect(\r\n\t\t\t\t\tpos.x - this.imageSize.x * 0.45,\r\n\t\t\t\t\tpos.y - this.imageSize.y * 0.45,\r\n\t\t\t\t\tthis.imageSize.x * 0.9,\r\n\t\t\t\t\tthis.imageSize.y * 0.9\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n    drawUnitBG(ctx) {\r\n\t\tlet halfscale = 0.47;\r\n\t\t\r\n        if (this.isSelected || this.isTargeted) {\r\n            if (this.isEnemy) ctx.fillStyle = \"rgba(255,85,85,0.9)\";\r\n            else ctx.fillStyle = \"rgba(136,136,238,0.9)\";\r\n        } else if (this.isActive() || !this.isInPhase()) {\r\n            if (this.isEnemy) ctx.fillStyle = \"rgba(255,140,140,0.8)\";\r\n            else ctx.fillStyle = \"rgba(170,170,255,0.8)\";\r\n        } else {\r\n            if (this.isEnemy) ctx.fillStyle = \"rgba(255,238,238,0.8)\";\r\n            else ctx.fillStyle = \"rgba(238,238,255,0.8)\";\r\n        }\r\n        ctx.fillRect(\r\n            this.coordinate.x - this.imageSize.x * halfscale,\r\n            this.coordinate.y - this.imageSize.y * halfscale,\r\n            this.imageSize.x * 2 * halfscale,\r\n            this.imageSize.y * 2 * halfscale\r\n        );\r\n\r\n        if (this.hasDestProposal) {\r\n            if (this.pathToDestProposal !== null) {\r\n                if (this.isEnemy) ctx.fillStyle = \"rgba(255,170,170,0.7)\";\r\n                else ctx.fillStyle = \"rgba(170,204,255,0.7)\";\r\n                let len = this.pathToDestProposal.length;\r\n                for (let i = 1; i < len; i++) {\r\n                    ctx.fillRect(\r\n                        this.pathToDestProposalCoord[i].x -\r\n                            this.imageSize.x * halfscale,\r\n                        this.pathToDestProposalCoord[i].y -\r\n                            this.imageSize.y * halfscale,\r\n                        this.imageSize.x * 2 * halfscale,\r\n                        this.imageSize.y * 2 * halfscale\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (this.isEnemy) ctx.fillStyle = \"#e88\";\r\n            else ctx.fillStyle = \"#88e\";\r\n            ctx.fillRect(\r\n                this.destProposalCoord.x - this.imageSize.x * halfscale,\r\n                this.destProposalCoord.y - this.imageSize.y * halfscale,\r\n                this.imageSize.x * 2 * halfscale,\r\n                this.imageSize.y * 2 * halfscale\r\n            );\r\n        }\r\n    }\r\n\r\n    drawUnit(ctx) {\r\n\t\tif (this.isAlive()) {\r\n\t\t\tif (this.hasDestProposal) {\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\tthis.imageZokusei,\r\n\t\t\t\t\tthis.destProposalCoord.x -\r\n\t\t\t\t\t\t(this.imageSize.x * this.drawScale) / 2,\r\n\t\t\t\t\tthis.destProposalCoord.y -\r\n\t\t\t\t\t\t(this.imageSize.y * this.drawScale) / 2,\r\n\t\t\t\t\tthis.imageSize.x * this.drawScale,\r\n\t\t\t\t\tthis.imageSize.y * this.drawScale\r\n\t\t\t\t);\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\tthis.image,\r\n\t\t\t\t\tthis.destProposalCoord.x -\r\n\t\t\t\t\t\t(this.imageSize.x * this.drawScale) / 2,\r\n\t\t\t\t\tthis.destProposalCoord.y -\r\n\t\t\t\t\t\t(this.imageSize.y * this.drawScale) / 2,\r\n\t\t\t\t\tthis.imageSize.x * this.drawScale,\r\n\t\t\t\t\tthis.imageSize.y * this.drawScale\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\tthis.imageZokusei,\r\n\t\t\t\t\tthis.coordinate.x - (this.imageSize.x * this.drawScale) / 2,\r\n\t\t\t\t\tthis.coordinate.y - (this.imageSize.y * this.drawScale) / 2,\r\n\t\t\t\t\tthis.imageSize.x * this.drawScale,\r\n\t\t\t\t\tthis.imageSize.y * this.drawScale\r\n\t\t\t\t);\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\tthis.image,\r\n\t\t\t\t\tthis.coordinate.x - (this.imageSize.x * this.drawScale) / 2,\r\n\t\t\t\t\tthis.coordinate.y - (this.imageSize.y * this.drawScale) / 2,\r\n\t\t\t\t\tthis.imageSize.x * this.drawScale,\r\n\t\t\t\t\tthis.imageSize.y * this.drawScale\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.graveImage === undefined) \r\n\t\t\t\tthis.graveImage = document.getElementById(\"img_dead\");\r\n\t\t\t\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis.graveImage,\r\n\t\t\t\tthis.coordinate.x - (this.imageSize.x * this.drawScale) / 2,\r\n\t\t\t\tthis.coordinate.y - (this.imageSize.y * this.drawScale) / 2,\r\n\t\t\t\tthis.imageSize.x * this.drawScale,\r\n\t\t\t\tthis.imageSize.y * this.drawScale\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n}\r\n","import UnitBase from \"/src/unitBase\";\r\n\r\n/*\r\n\tparams: {\r\n\t\tmoveAssist\r\n\t}\r\n*/\r\n\r\nexport default class ProtoPlayer extends UnitBase {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy);\r\n\t\tthis.params = JSON.parse(JSON.stringify(params));\r\n\t\tif (this.params.skills === undefined) this.params.skills = [];\r\n\t\t\r\n\t\tthis.isFighter = false; // decides whether this unit can equip fighter skills\r\n\t}\r\n}\r\n","const texts = {\r\n\tunit: {\r\n\t\tunitBase: \"nannhidaman\",\r\n\t\t\r\n\t\tpRizaruto: \"リザルト・ヴォン・ヒ～ダン\",\t\t\r\n\t\tpTomato: \"トマト・ジューシー\",\r\n\t\tpBlueberry: \"ブルーベリー・タイニー\",\r\n\t\tpCabbage: \"キャベツ・レタス・ドッチナン\",\r\n\t\tpKenshi: \"剣士\",\r\n\t\t\r\n\t\teKenshi: \"剣士\",\r\n\t\teArcher: \"弓兵\",\r\n\t\teCavLance: \"騎士\",\r\n\t\teCavBow: \"弓騎兵\",\r\n\t\teDKAxe: \"竜騎士\"\r\n\t},\r\n\tmoveAssist: {\r\n\t\tnone: \"移動補助なし\",\r\n\t\treposition: \"引き戻し\",\r\n\t\tdrawBack: \"引き寄せ\",\r\n\t\tswap: \"入れ替え\"\r\n\t},\r\n\tskills: {\r\n\t\tnone: \"--\",\r\n\t\textraStamina: \"行動力強化\",\r\n\t\textraMovement: \"移動距離強化\",\r\n\t\tpassiveFlyer: \"飛行\",\r\n\t\tpassiveRanged: \"遠距離攻撃\",\r\n\t},\r\n}\r\n\r\n\r\nexport default texts;","import ProtoPlayer from \"/src/units/protoPlayer\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class PKenshi extends ProtoPlayer {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.pKenshi;\r\n\t\tthis.imageID = \"img_kenshi\";\r\n\t\t\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 1;\r\n\t}\r\n}","import ProtoPlayer from \"/src/units/protoPlayer\";\r\nimport texts from \"/src/texts/texts_jp\";\r\nimport consts from \"/src/consts\";\r\n\r\nexport default class PRizaruto extends ProtoPlayer {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.pRizaruto;\r\n\t\tthis.imageID = \"img_kenshi\";\r\n\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 1;\r\n\t\t\r\n\t\tthis.isFighter = true;\r\n\t\t\r\n\t\tthis.params.skills.push({\r\n\t\t\tskill: \"extraStamina\",\r\n\t\t\tlevel: 1\r\n\t\t});\r\n\t}\r\n}","import ProtoPlayer from \"/src/units/protoPlayer\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class PTomato extends ProtoPlayer {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.pTomato;\r\n\t\tthis.imageID = \"img_tomato\";\r\n\t\t\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 0;\r\n\t\t\r\n\t\tthis.params.moveAssist = consts.moveAssist.drawBack;\r\n\t}\r\n}","import ProtoPlayer from \"/src/units/protoPlayer\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class PBlueberry extends ProtoPlayer {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.pBlueberry;\r\n\t\tthis.imageID = \"img_blueberry\";\r\n\t\t\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 0;\r\n\t\t\r\n\t\tthis.params.moveAssist = consts.moveAssist.swap;\r\n\t\t\r\n\t\tthis.params.skills.push({\r\n\t\t\tskill: \"extraStamina\",\r\n\t\t\tlevel: 1\r\n\t\t});\r\n\t}\r\n}","import ProtoPlayer from \"/src/units/protoPlayer\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class PCabbage extends ProtoPlayer {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.pCabbage;\r\n\t\tthis.imageID = \"img_cabbage\";\r\n\t\t\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 0;\r\n\t\t\r\n\t\tthis.params.moveAssist = consts.moveAssist.reposition;\r\n\t}\r\n}","import UnitBase from \"/src/unitBase\";\r\nimport consts from \"/src/consts\";\r\n\r\n/*\r\n\tparams: {\r\n\t\tmoveAssist\r\n\t\tskills: []\r\n\t\tbarrier: [unitIDs].  Note: unitID starts from 1!!!! WTF!!!!\r\n\t}\r\n*/\r\n\r\nexport default class ProtoEnemy extends UnitBase {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy);\r\n\t\t//this.params = params;\r\n\t\tthis.params = JSON.parse(JSON.stringify(params));\r\n\t\tif (this.params.skills === undefined) this.params.skills = [];\r\n\t\tthis.barrierTimer = this.hGame.barrierConnectionTimer;\r\n\t\tthis.isFighter = true; // decides whether this unit can equip fighter skills\r\n\t\t//this.initBarrier();   <-- moved to update()\r\n\t}\r\n\t\r\n\tinitBarrier() {\r\n\t\tthis.barrierTotal = 0;\r\n\t\tthis.barrierSourceList = [];\r\n\t\tif (this.params.barrier === undefined) this.params.barrier = null;\r\n\t\tif (this.params.barrier !== null) {\r\n\t\t\tthis.params.barrier.forEach(id => {\r\n\t\t\t\tlet unitSource = this.hGame.findUnitByID(this.isEnemy, id);\r\n\t\t\t\tif (unitSource === null) return; // source already dead\r\n\t\t\t\tthis.barrierTotal ++;\r\n\t\t\t\tthis.barrierSourceList.push(unitSource);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif (this.barrierTotal > 0) this.imageZokusei = this.imageBarrier;\r\n\t}\r\n\t\r\n\tinitAfterCreation() {\r\n\t\tsuper.initAfterCreation();\r\n\t\tlet zokuStr = \"img_effect_barrier_grey\";\r\n\t\tif (this.params !== null && this.params.zokusei !== undefined) {\r\n\t\t\tif (this.params.zokusei === consts.zokusei.red) zokuStr = \"img_effect_barrier_red\";\r\n\t\t\tif (this.params.zokusei === consts.zokusei.blue) zokuStr = \"img_effect_barrier_blue\";\r\n\t\t\tif (this.params.zokusei === consts.zokusei.green) zokuStr = \"img_effect_barrier_green\";\r\n\t\t}\r\n\t\tthis.imageBarrier = document.getElementById(zokuStr);\r\n\t\tthis.imageZokuseiReal = this.imageZokusei;\r\n\t\t\r\n\t}\r\n\t\r\n\teventLoseBarrier(unitSource) {\r\n\t\tlet idx = this.params.barrier.indexOf(unitSource.unitID);\r\n\t\tif (idx === -1) return;\r\n\t\t\r\n\t\t/*\r\n\t\tlet idx = this.params.barrier.indexOf(unitSource.unitID);\r\n\t\tif (idx !== -1) {\r\n\t\t\tlet len = this.params.barrier.length;\r\n\t\t\tif (idx !== len-1) {\r\n\t\t\t\tthis.params.barrier[idx] = this.params.barrier.pop();\r\n\t\t\t} else {\r\n\t\t\t\tthis.params.barrier.pop();\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tthis.barrierTotal --;\r\n\t\tremoveObjectFromList(unitSource, this.barrierSourceList);\r\n\t\tif (this.barrierTotal <= 0) {\r\n\t\t\tthis.imageZokusei = this.imageZokuseiReal;\r\n\t\t}\r\n\t}\r\n\t\r\n\teventLoseHP(damage) {\r\n\t\tif (this.barrierTotal > 0) return;\r\n\t\tsuper.eventLoseHP(damage);\r\n\t}\r\n\t\r\n\tupdate(df) {\r\n\t\tsuper.update(df);\r\n\t\t\r\n\t\t// this is ugly but it should avoid barrier-lock problems\r\n\t\tif (this.barrierTotal === undefined) this.initBarrier();\r\n\t}\r\n\t\r\n\tdrawBarrierConnection(ctx) {\r\n\t\tif (this.barrierTotal <= 0) return;\r\n\t\tif (this.isInPhase()) return;\r\n\t\tif (this.hGame.flagDrawAllBarrier === false &&\r\n\t\t\tthis.isSelected === false) return;\r\n\t\tif (this.hGame.flagDrawAllBarrier && \r\n\t\t\tthis.hGame.flagUnitSelected &&\r\n\t\t\tthis.isSelected === false) return;\r\n\t\t\r\n\t\tif (this.barrierTimer.timer > 2) return;\r\n\t\t\r\n\t\tctx.lineWidth = 4;\r\n\t\tctx.strokeStyle = \"#0000FF\";\r\n\t\tlet\tx2 = this.hGame.gridPosToPosX(this.gridPos.x), \r\n\t\t\ty2 = this.hGame.gridPosToPosY(this.gridPos.y);\r\n\t\t\t\r\n\t\tthis.barrierSourceList.forEach(unit => {\r\n\t\t\tlet x1 = this.hGame.gridPosToPosX(unit.gridPos.x), \r\n\t\t\t\ty1 = this.hGame.gridPosToPosY(unit.gridPos.y);\r\n\t\t\t\r\n\t\t\tif (this.barrierTimer.timer <= 1) {\r\n\t\t\t\tdrawLine(\r\n\t\t\t\t\tctx, x1, y1, \r\n\t\t\t\t\tx1 + this.barrierTimer.timer * (x2 - x1), \r\n\t\t\t\t\ty1 + this.barrierTimer.timer * (y2 - y1)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tdrawLine(\r\n\t\t\t\t\tctx, \r\n\t\t\t\t\tx1 + (this.barrierTimer.timer-1) * (x2 - x1), \r\n\t\t\t\t\ty1 + (this.barrierTimer.timer-1) * (y2 - y1), \r\n\t\t\t\t\tx2, y2\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t//drawLine(ctx, x1, y1, x2, y2);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/*\r\n\tdrawUnit(ctx) {\r\n\t\tif (this.barrierTotal > 0) this.drawBarrierConnection(ctx);\r\n\t\tsuper.drawUnit(ctx);\r\n\t}\r\n\t*/\r\n\t\r\n}\r\n\r\nfunction drawLine(ctx, x1, y1, x2, y2) {\r\n\t//alert(ctx +\",\"+ x1 +\",\"+ y1 +\",\"+ x2 +\",\"+ y2);\r\n\tctx.beginPath();\r\n\tctx.moveTo(x1, y1);\r\n\tctx.lineTo(x2, y2);\r\n\tctx.stroke();\r\n}\r\n\r\nfunction removeObjectFromList(object, list) {\r\n    let idx = list.indexOf(object);\r\n    list.splice(idx, 1);\r\n}\r\n","import ProtoEnemy from \"/src/units/protoEnemy\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class EKenshi extends ProtoEnemy {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.eKenshi;\r\n\t\tthis.imageID = \"img_kenshi2\";\r\n\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 1;\r\n\t\t\r\n\t}\r\n}","import ProtoEnemy from \"/src/units/protoEnemy\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class EArcher extends ProtoEnemy {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.eArcher;\r\n\t\tthis.imageID = \"img_eArcher\";\r\n\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 2;\r\n\t\t\r\n\t}\r\n}","import ProtoEnemy from \"/src/units/protoEnemy\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class ECavLance extends ProtoEnemy {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.eCavLance;\r\n\t\tthis.imageID = \"img_eKibaYari\";\r\n\r\n\t\tthis.moveDistMax = 3;\r\n\t\tthis.attackRange = 1;\r\n\t\tthis.moveType = consts.moveTypes.cavalry;\r\n\t}\r\n}","import ProtoEnemy from \"/src/units/protoEnemy\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class ECavBow extends ProtoEnemy {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.eCavBow;\r\n\t\tthis.imageID = \"img_eKibaYumi\";\r\n\r\n\t\tthis.moveDistMax = 3;\r\n\t\tthis.attackRange = 2;\r\n\t\tthis.moveType = consts.moveTypes.cavalry;\r\n\t}\r\n}","import ProtoEnemy from \"/src/units/protoEnemy\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class eDKAxe extends ProtoEnemy {\r\n\tconstructor(unitID, hGame, gridPos, isEnemy, params) {\r\n\t\tsuper(unitID, hGame, gridPos, isEnemy, params);\r\n\t\tthis.nameStr = texts.unit.eDKAxe;\r\n\t\tthis.imageID = \"img_eDK\";\r\n\t\t\r\n\t\tthis.moveDistMax = 2;\r\n\t\tthis.attackRange = 1;\r\n\t\tthis.moveType = consts.moveTypes.flyer;\r\n\t}\r\n}","import consts from \"/src/consts\"\r\nimport UnitBase from \"/src/unitBase\";\r\nimport PKenshi from \"/src/units/pKenshi\";\r\nimport PRizaruto from \"/src/units/pRizaruto\";\r\nimport PTomato from \"/src/units/pTomato\";\r\nimport PBlueberry from \"/src/units/pBlueberry\";\r\nimport PCabbage from \"/src/units/pCabbage\";\r\nimport EKenshi from \"/src/units/eKenshi\";\r\nimport EArcher from \"/src/units/eArcher\";\r\nimport ECavLance from \"/src/units/eCavLance\";\r\nimport ECavBow from \"/src/units/eCavBow\";\r\nimport EDKAxe from \"/src/units/eDKAxe\";\r\n\r\n/*\r\n\tWhen adding a new unit:\r\n\t(1) import it above\r\n\t(2) add it into this.list @ constructor. Just use [x], forget about push\r\n\t(3) update consts.js\r\n*/\r\nlet uType = consts.unitTypes;\r\n\r\nexport default class UnitCreator {\r\n\tconstructor () {\r\n\t\tthis.list = [];\r\n\t\t\r\n\t\tthis.list[uType.unitBase] = UnitBase;\r\n\t\tthis.list[uType.pKenshi] = PKenshi;\r\n\t\tthis.list[uType.pRizaruto] = PRizaruto;\r\n\t\tthis.list[uType.pTomato] = PTomato;\r\n\t\tthis.list[uType.pBlueberry] = PBlueberry;\r\n\t\tthis.list[uType.pCabbage] = PCabbage;\r\n\t\t\r\n\t\tthis.list[uType.eKenshi] = EKenshi;\r\n\t\tthis.list[uType.eArcher] = EArcher;\r\n\t\tthis.list[uType.eCavLance] = ECavLance;\r\n\t\tthis.list[uType.eCavBow] = ECavBow;\r\n\t\tthis.list[uType.eDKAxe] = EDKAxe;\r\n\t}\r\n\t\r\n\tcreateUnit(unitID, hGame, gridPos, isEnemy, typeID, params) {\r\n\t\t//alert(unitID+\",\"+gridPos.x+\",\"+gridPos.y+\",\"+isEnemy+\",\"+typeID);\r\n\t\tif (typeID === uType.unitBase) {\r\n\t\t\t// this should never happen after units are implemented\r\n\t\t\tlet unit = new this.list[typeID](\r\n\t\t\t\tunitID, hGame, gridPos, isEnemy\r\n\t\t\t);\r\n\t\t\treturn unit;\r\n\t\t}\r\n\t\t\r\n\t\tlet unit = new this.list[typeID](\r\n\t\t\t unitID, hGame, gridPos, isEnemy, params\r\n\t\t);\r\n\t\treturn unit;\r\n\t}\r\n}","import consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class SkillPassive {\r\n\tconstructor (unit, level) {\r\n\t\tthis.hUnit = unit;\r\n\t\tthis.level = level;\r\n\t\t\r\n\t\tthis.isFighterSkill = false; // if true then only fighters can equip it\r\n\t\t\r\n\t\tthis.isPassive = true; // important, decides when & how the skill is applied\r\n\t\t// others are like isBuffEveryTurn, isMovementMutator etc. \r\n\t\t\r\n\t\tthis.skillID = consts.skills.none; // set this after super\r\n\t}\r\n\t\r\n\tapplyOnce() {\r\n\t\t// change staminaMax, etc.\r\n\t}\r\n\t\r\n\t// other stuffs... still not sure how to implement stuffs like sendo. sigh...\r\n\t// also there can be skills that apply \"online\" e.g. waves...\r\n\t// well they perhaps should be called active skills so we don't need to worry about them atm lol\r\n}\r\n","import SkillPassive from \"/src/skills/skillPassive\";\r\nimport consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\n\r\nexport default class ExtraStamina extends SkillPassive {\r\n\tconstructor (unit, level) {\r\n\t\tsuper(unit, level);\r\n\t\tthis.skillID = consts.skills.extraStamina;\r\n\t}\r\n\t\r\n\tapplyOnce() {\r\n\t\tthis.hUnit.staminaMax += this.level;\r\n\t\t//alert(this.hUnit.staminaMax);\r\n\t}\r\n}\r\n","import SkillPassive from \"/src/skills/skillPassive\";\r\nimport consts from \"/src/consts\";\r\n\r\nexport default class ExtraMovement extends SkillPassive {\r\n\tconstructor (unit, level) {\r\n\t\tsuper(unit, level);\r\n\t\tthis.skillID = consts.skills.extraMovement;\r\n\t}\r\n\t\r\n\tapplyOnce() {\r\n\t\tthis.hUnit.moveDistMax += this.level;\r\n\t}\r\n}\r\n","import SkillPassive from \"/src/skills/skillPassive\";\r\nimport consts from \"/src/consts\";\r\n\r\nexport default class PassiveFlyer extends SkillPassive {\r\n\tconstructor (unit, level) {\r\n\t\tsuper(unit, level);\r\n\t\tthis.skillID = consts.skills.passiveFlyer;\r\n\t}\r\n\t\r\n\tapplyOnce() {\r\n\t\tthis.hUnit.moveType = consts.moveTypes.flyer;\r\n\t}\r\n}\r\n","import SkillPassive from \"/src/skills/skillPassive\";\r\nimport consts from \"/src/consts\";\r\n\r\nexport default class PassiveRanged extends SkillPassive {\r\n\tconstructor (unit, level) {\r\n\t\tsuper(unit, level);\r\n\t\tthis.skillID = consts.skills.passiveRanged;\r\n\t\tthis.isFighterSkill = true;\r\n\t}\r\n\t\r\n\tapplyOnce() {\r\n\t\tthis.hUnit.attackRange = 2;\r\n\t}\r\n}\r\n","import consts from \"/src/consts\";\r\nimport texts from \"/src/texts/texts_jp\";\r\nimport ExtraStamina from \"/src/skills/passive/extraStamina\";\r\nimport ExtraMovement from \"/src/skills/passive/extraMovement\";\r\nimport PassiveFlyer from \"/src/skills/passive/passiveFlyer\";\r\nimport PassiveRanged from \"/src/skills/passive/passiveRanged\";\r\n\r\n/*\r\n\tWhen adding a new skill:\r\n\t(1) import it above\r\n\t(2) add it into this.list @ constructor. Just use [x], forget about push\r\n\t(3) update consts.js, texts_##.js\r\n*/\r\n\r\nexport default class SkillCreator {\r\n\tconstructor () {\r\n\t\tthis.defaultIdx = 0;\r\n\t\tthis.list = [];\r\n\t\tthis.list[consts.skills.extraStamina] = ExtraStamina;\r\n\t\tthis.list[consts.skills.extraMovement] = ExtraMovement;\r\n\t\tthis.list[consts.skills.passiveRanged] = PassiveRanged;\r\n\t\t//this.list[consts.skills.passiveFlyer] = PassiveFlyer;\r\n\t\t\r\n\t\tthis.mapIDtoTexts = [];\r\n\t\tfor (let x in consts.skills) {\r\n\t\t\tthis.mapIDtoTexts[consts.skills[x]] = texts.skills[x];\r\n\t\t}\r\n\t}\r\n\t\r\n\tcreateSkill(unit, skillStr, level) {\r\n\t\t//alert(unit +\", \"+ skillStr +\", \"+ level);\r\n\t\tlet newSkill = new this.list[consts.skills[skillStr]](unit, level);\r\n\t\treturn newSkill;\r\n\t}\r\n\t\r\n\tgetSkillListStringForSelecter(num, unit) {\r\n\t\tlet str = `Skill `+num+`:\r\n\t\t<select id=\"divSkillSelecter_`+unit+\"_\"+num+`_list\">`;\r\n\t\t\r\n\t\tlet len = this.list.length;\r\n\t\tfor (let i = 0; i < len; i ++) {\r\n\t\t\tif (i !== consts.skills.none && this.list[i] === undefined) continue;\r\n\t\t\t\r\n\t\t\tstr += `<option value=\"`+ i \r\n\t\t\t+ (i === this.defaultIdx ? `\" selected` : `\"`)\r\n\t\t\t+`>` + this.mapIDtoTexts[i] + `</option>\r\n\t\t\t`;\r\n\t\t}\r\n\t\t\r\n\t\tstr += `</select>`;\r\n\t\treturn str;\r\n\t}\r\n}","/* \r\n\tcurrently only support 1-grid MA\r\n\tbut extending to 8 dirs shouldn't be too difficult\r\n*/\r\n\r\nexport default class MoveAssist {\r\n\tconstructor (hGame) {\r\n\t\tthis.hGame = hGame;\r\n\t\t\r\n\t\tthis.dUser = []; // [2:{x,y}, 4, 6, 8]\r\n\t\tthis.dTarget = [];\r\n\t\t\r\n\t\tfor (let i = 0; i <= 9; i ++) {\r\n\t\t\tthis.dUser[i] = null;\r\n\t\t\tthis.dTarget[i] = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// super() -> set values to dUser[2] & dTarget[2] -> call this\r\n\tcopyToFourDirs() {\r\n\t\tthis.dUser[8] = {\r\n\t\t\tx: this.dUser[2].x,\r\n\t\t\ty: -this.dUser[2].y\r\n\t\t}\r\n\t\tthis.dUser[6] = {\r\n\t\t\tx: this.dUser[2].y,\r\n\t\t\ty: this.dUser[2].x\r\n\t\t}\r\n\t\tthis.dUser[4] = {\r\n\t\t\tx: -this.dUser[2].y,\r\n\t\t\ty: this.dUser[2].x\r\n\t\t}\r\n\t\tthis.dTarget[8] = {\r\n\t\t\tx: this.dTarget[2].x,\r\n\t\t\ty: -this.dTarget[2].y\r\n\t\t}\r\n\t\tthis.dTarget[6] = {\r\n\t\t\tx: this.dTarget[2].y,\r\n\t\t\ty: this.dTarget[2].x\r\n\t\t}\r\n\t\tthis.dTarget[4] = {\r\n\t\t\tx: -this.dTarget[2].y,\r\n\t\t\ty: this.dTarget[2].x\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetDirection(dest, target) {\r\n\t\tlet dx = target.gridPos.x - dest.x;\r\n\t\tlet dy = target.gridPos.y - dest.y;\r\n\t\tif (dx > 1 || dx < -1 || dy > 1 || dy < -1) return null;\r\n\t\treturn 5 + dx - 3*dy;\r\n\t}\r\n\t\r\n\tcheckIfGpInMaxGrid(gp) {\r\n\t\tif (gp.x < 1 || gp.y < 1 || \r\n\t\t\tgp.x > this.hGame.maxGrid.x || \r\n\t\t\tgp.y > this.hGame.maxGrid.y\r\n\t\t) return false;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tcheckEligibility(user, dest, target) {\r\n\t\t//alert(user.unitID + \" @ \" + dest.x + \",\" + dest.y + \" -> \" + target.unitID);\r\n\t\tlet dir = this.getDirection(dest, target);\r\n\t\tif (dir === null) return false;\r\n\t\tif (this.dUser[dir] === null) return false;\r\n\t\t//alert(\"pass 1\");\r\n\t\tlet gpNewUser = {\r\n\t\t\tx: dest.x + this.dUser[dir].x,\r\n\t\t\ty: dest.y + this.dUser[dir].y\r\n\t\t};\r\n\t\tif (!this.checkIfGpInMaxGrid(gpNewUser)) return false;\r\n\t\tif (!user.checkStopable(gpNewUser, target)) return false;\r\n\t\t//alert(\"pass 2\");\r\n\t\tlet gpNewTarget = {\r\n\t\t\tx: target.gridPos.x + this.dTarget[dir].x,\r\n\t\t\ty: target.gridPos.y + this.dTarget[dir].y\r\n\t\t};\r\n\t\tif (!this.checkIfGpInMaxGrid(gpNewTarget)) return false;\r\n\t\tif (!target.checkStopable(gpNewTarget, user)) return false;\r\n\t\t//alert(\"pass 3\");\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\texecute(user, target) {\r\n\t\t/* \tcorrent logic is: \r\n\t\t\tUB.eventUseMoveAssist ->\r\n\t\t\tUB.executeAction -> \r\n\t\t\tGame.eventActionExecuted ->\r\n\t\t\tGame.requirePathUpdate ->\r\n\t\t\tUB.eventRequirePathUpdate.\r\n\t\t\t\r\n\t\t\tTo avoid pathData problem, always call in the order of:\r\n\t\t\t(1) eventMovedByMoveAssist\r\n\t\t\t(2) eventUseMoveAssist.\r\n\t\t*/\r\n\t\tlet dir = this.getDirection(user.destProposalGP, target);\r\n\t\ttarget.eventMovedByMoveAssist({\r\n\t\t\tx: target.gridPos.x + this.dTarget[dir].x,\r\n\t\t\ty: target.gridPos.y + this.dTarget[dir].y\r\n\t\t});\r\n\t\tuser.eventUseMoveAssist({\r\n\t\t\tx: user.destProposalGP.x + this.dUser[dir].x,\r\n\t\t\ty: user.destProposalGP.y + this.dUser[dir].y\r\n\t\t});\r\n\t}\r\n\t\r\n}","import MoveAssist from \"/src/skills/moveAssist\";\r\nimport consts from \"/src/consts\"\r\nimport texts from \"/src/texts/texts_jp\"\r\n\r\n/* \r\n\tto add: change constructor, consts, texts.\r\n*/\r\n\r\nexport default class MoveAssistList {\r\n\tconstructor (hGame) {\r\n\t\tthis.hGame = hGame;\r\n\t\tthis.list = [];\r\n\t\tthis.names = [];\r\n\t\t\r\n\t\tlet repo = new MoveAssist(hGame);\r\n\t\trepo.dUser[2] = \t{x: 0, y: 0};\r\n\t\trepo.dTarget[2] = \t{x: 0, y: -2};\r\n\t\trepo.copyToFourDirs();\r\n\t\tthis.list[consts.moveAssist.reposition] = repo;\r\n\t\t\r\n\t\tlet drawBack = new MoveAssist(hGame);\r\n\t\tdrawBack.dUser[2] = \t{x: 0, y: -1};\r\n\t\tdrawBack.dTarget[2] = \t{x: 0, y: -1};\r\n\t\tdrawBack.copyToFourDirs();\r\n\t\tthis.list[consts.moveAssist.drawBack] = drawBack;\r\n\t\t\r\n\t\tlet swap = new MoveAssist(hGame);\r\n\t\tswap.dUser[2] = \t{x: 0, y: +1};\r\n\t\tswap.dTarget[2] = \t{x: 0, y: -1};\r\n\t\tswap.copyToFourDirs();\r\n\t\tthis.list[consts.moveAssist.swap] = swap;\r\n\t\t\r\n\t\tfor (const [key, value] of Object.entries(consts.moveAssist)) {\r\n\t\t\tthis.names[value] = texts.moveAssist[key];\r\n\t\t}\r\n\t\t//alert(this.names);\r\n\t}\r\n\t\r\n\tcheckEligibility(maID, user, dest, target) {\r\n\t\tif (this.list[maID] === null) return false;\r\n\t\treturn this.list[maID].checkEligibility(user, dest, target);\r\n\t}\r\n\t\r\n\texecute(maID, user, target) {\r\n\t\tif (this.list[maID] === null) return false;\r\n\t\t// assume checkEligibility is already passed\r\n\t\tthis.list[maID].execute(user, target);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n}","const dx = [0, -1, +1, 0];\r\nconst dy = [+1, 0, 0, -1];\r\n\r\nexport default class ThreatMap {\r\n\tconstructor (hGame) {\r\n\t\tthis.hGame = hGame;\r\n\t\tthis.maxGrid = hGame.maxGrid;\r\n\t\t\r\n\t\tthis.flagShowThreat = false;\r\n\t\t\r\n\t\tthis.threatMap = [];\r\n\t\tfor (let x = 1; x <= this.maxGrid.x; x++) {\r\n\t\t\tthis.threatMap[x] = [];\r\n\t\t}\r\n\t\t\r\n\t\tthis.thickness = 2;\r\n\t\tthis.drawOffsetX = [\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness,\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness,\r\n\t\t\tthis.hGame.gridSize / 2 - this.thickness,\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness\r\n\t\t];\r\n\t\tthis.drawOffsetY = [\r\n\t\t\tthis.hGame.gridSize / 2 - this.thickness,\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness,\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness,\r\n\t\t\t-this.hGame.gridSize / 2 - this.thickness\r\n\t\t];\r\n\t\tthis.drawDX = [\r\n\t\t\tthis.hGame.gridSize + 2*this.thickness,\r\n\t\t\t2*this.thickness,\r\n\t\t\t2*this.thickness,\r\n\t\t\tthis.hGame.gridSize + 2*this.thickness,\r\n\t\t];\r\n\t\tthis.drawDY = [\r\n\t\t\t2*this.thickness,\r\n\t\t\tthis.hGame.gridSize + 2*this.thickness,\r\n\t\t\tthis.hGame.gridSize + 2*this.thickness,\r\n\t\t\t2*this.thickness,\r\n\t\t];\r\n\t}\r\n\t\r\n\tupdateThreatMap() {\r\n\t\tfor (let x = 1; x <= this.maxGrid.x; x++) {\r\n\t\t\tfor (let y = 1; y <= this.maxGrid.y; y++) {\r\n\t\t\t\tthis.threatMap[x][y] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.hGame.enemyUnitList.forEach(unit => {\r\n\t\t\tunit.pathData.listAttackable.forEach(obj => {\r\n\t\t\t\tthis.threatMap[obj.gp.x][obj.gp.y] = true;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\ttoggleThreat() {\r\n\t\tthis.flagShowThreat = !this.flagShowThreat;\r\n\t\t//alert(this.flagShowThreat);\r\n\t}\r\n\t\r\n\tcheckIfGpInMaxGrid(x, y) {\r\n\t\tif (x < 1 || y < 1 || x > this.maxGrid.x || y > this.maxGrid.y) return false;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tdraw(ctx) {\r\n\t\tif (!this.flagShowThreat) return;\r\n\t\tfor (let x = 1; x <= this.maxGrid.x; x++) {\r\n\t\t\tfor (let y = 1; y <= this.maxGrid.y; y++) {\r\n\t\t\t\tif (this.threatMap[x][y]) {\r\n\t\t\t\t\tctx.fillStyle = \"rgba(255,50,50,0.1)\";\r\n\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\tthis.hGame.gridPosToPosX(x) - this.hGame.gridSize * 0.5,\r\n\t\t\t\t\t\tthis.hGame.gridPosToPosY(y) - this.hGame.gridSize * 0.5,\r\n\t\t\t\t\t\tthis.hGame.gridSize * 1,\r\n\t\t\t\t\t\tthis.hGame.gridSize * 1\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (let k = 0; k < 4; k ++) {\r\n\t\t\t\t\t\tif (! this.checkIfGpInMaxGrid(x + dx[k], y + dy[k])) continue;\r\n\t\t\t\t\t\tif (! this.threatMap[x + dx[k]][y + dy[k]]) {\r\n\t\t\t\t\t\t\tctx.fillStyle = \"rgba(255,50,50,1)\";\r\n\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\tthis.hGame.gridPosToPosX(x) + this.drawOffsetX[k],\r\n\t\t\t\t\t\t\t\tthis.hGame.gridPosToPosY(y) + this.drawOffsetY[k],\r\n\t\t\t\t\t\t\t\tthis.drawDX[k],\r\n\t\t\t\t\t\t\t\tthis.drawDY[k]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import texts from \"/src/texts/texts_jp\"\r\n\r\nconst sx = [2.3, 2.3, 2.3, 4.3, 4.3, 4.3];\r\nconst sy = [1.1, 1.4, 1.7, 1.1, 1.4, 1.7];\r\n\r\nexport default class StatusPanel {\r\n\tconstructor (hGame) {\r\n\t\tthis.hGame = hGame;\r\n\t\t\r\n\t\tthis.currentUnit = null;\r\n\t\t\r\n\t\tthis.skillCounter = 0;\r\n\t}\r\n\t\r\n\teventSelectUnit (unit) {\r\n\t\t//alert(\"select\");\r\n\t\tthis.currentUnit = unit;\r\n\t}\r\n\t\r\n\teventDeselect () {\r\n\t\tthis.currentUnit = null;\r\n\t}\r\n\t\r\n\tdrawSkillText(ctx, str) {\r\n\t\tctx.fillText(\r\n\t\t\tstr,\r\n\t\t\tthis.hGame.gridSize * sx[this.skillCounter],\r\n\t\t\tthis.hGame.gridSize * (this.hGame.maxGrid.y + sy[this.skillCounter])\r\n\t\t);\r\n\t\tthis.skillCounter ++;\r\n\t}\r\n\t\r\n\tdraw(ctx) {\r\n\t\tif (this.currentUnit !== null) {\r\n\t\t\t//alert(\"draw\");\r\n\t\t\tctx.drawImage(\r\n                this.currentUnit.image,\r\n                0,\r\n                this.hGame.gridSize * (this.hGame.maxGrid.y+0.2),\r\n                this.hGame.gridSize*2,\r\n                this.hGame.gridSize*2\r\n            );\r\n\t\t\tctx.fillStyle = \"#000\";\r\n\t\t\tctx.font = \"18px serif\";\r\n\t\t\tctx.fillText(\r\n\t\t\t\tthis.currentUnit.nameStr,\r\n\t\t\t\tthis.hGame.gridSize * 2.3,\r\n\t\t\t\tthis.hGame.gridSize * (this.hGame.maxGrid.y+0.6)\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tthis.skillCounter = 0;\r\n\t\t\tlet cUP = this.currentUnit.params;\r\n\t\t\tif (this.currentUnit.params !== null) {\r\n\t\t\t\tctx.font = \"14px serif\";\r\n\t\t\t\tif (cUP.moveAssist !== undefined) {\r\n\t\t\t\t\tthis.drawSkillText(ctx,\r\n\t\t\t\t\t\tthis.hGame.moveAssistList.names[cUP.moveAssist]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (cUP.skills !== undefined) {\r\n\t\t\t\t\tcUP.skills.forEach(skillLvPair => {\r\n\t\t\t\t\t\tthis.drawSkillText(ctx, \r\n\t\t\t\t\t\t\ttexts.skills[skillLvPair.skill]+skillLvPair.level\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","/* \r\n\tbehaviour: see update()\r\n*/\r\n\r\nexport default class GeneralTimer {\r\n\tconstructor (hGame, dfRate, maxValue) {\r\n\t\tthis.hGame = hGame;\r\n\t\tthis.maxValue = maxValue;\r\n\t\tthis.dfRate = dfRate;\r\n\t\tthis.timer = 0;\r\n\t}\r\n\t\r\n\tresetTimer() {\r\n\t\tthis.timer = 0;\r\n\t}\r\n\t\r\n\tupdate(df) {\r\n\t\tthis.timer += df * this.dfRate;\r\n\t\tif (this.timer > this.maxValue) this.timer = 0; \r\n\t}\r\n}","//import UnitBase from \"/src/unitBase\";\r\nimport Grid from \"/src/grid\";\r\nimport EffectStartPhase from \"/src/effects/effectStartPhase\";\r\nimport EffectGameOver from \"/src/effects/effectGameOver\";\r\nimport EffectStageClear from \"/src/effects/effectStageClear\";\r\nimport EnemyAI from \"/src/enemyAI\";\r\nimport PathFinder from \"/src/pathFinder\";\r\nimport consts from \"/src/consts\";\r\nimport Button from \"/src/button\";\r\nimport StageList from \"/src/stages/stageList\";\r\nimport UnitCreator from \"/src/units/unitCreator\";\r\nimport SkillCreator from \"/src/skills/skillCreator\";\r\nimport MoveAssistList from \"/src/skills/moveAssistList\";\r\nimport ThreatMap from \"/src/ui/threatMap\";\r\nimport StatusPanel from \"/src/ui/statusPanel\";\r\nimport GeneralTimer from \"/src/ui/generalTimer\";\r\n\r\nexport default class Game {\r\n    constructor(gameWidth, gameHeight, canvas) {\r\n        this.PHASE_NONE = 0;\r\n        this.PHASE_PLAYER = 1;\r\n        this.PHASE_ENEMY = 2;\r\n\r\n        this.gameWidth = gameWidth;\r\n        this.gameHeight = gameHeight;\r\n        this.hCanvas = canvas;\r\n\r\n        this.maxGrid = { x: 6, y: 8 };\r\n\r\n        this.gridSize = gameWidth / this.maxGrid.x;\r\n        this.grid = new Grid(this.gridSize, this.maxGrid);\r\n\t\t\r\n\t\tthis.stageList = new StageList();\r\n\t\tthis.unitCreator = new UnitCreator();\r\n\t\tthis.moveAssistList = new MoveAssistList(this);\r\n\t\tthis.skillCreator = new SkillCreator();\r\n\t\t\r\n\t\tthis.flagUseCustomPlayerSkills = false;\r\n\t\tthis.customPlayerSkills = null;\r\n\t\tthis.mapSkillIDtoStr = [];\r\n\t\tfor (let x in consts.skills) {\r\n\t\t\tthis.mapSkillIDtoStr[consts.skills[x]] = x;\r\n\t\t}\r\n\t\r\n\t\tthis.buttonList = [];\r\n\t\tthis.makeButtons();\r\n\t\t\r\n\t\tthis.resetGameState();\r\n    }\r\n\t\r\n\tresetGameState() {\r\n\t\tthis.currentStageIdxStr = null;\r\n        this.playerUnitList = [];\r\n        this.enemyUnitList = [];\r\n        this.unitID = 0;\r\n\r\n        this.effectList = [];\r\n\t\tthis.timerList = [];\r\n\r\n        this.currentPhase = this.PHASE_NONE;\r\n        this.isPhaseBlocked = false;\r\n        this.framesBeforeChangePhase = 0;\r\n\r\n        this.turn = 0;\r\n        this.stage = null;\r\n        this.enemyAI = new EnemyAI(this, true);\r\n        this.pathFinder = new PathFinder(this);\r\n\r\n        this.gameResult = consts.gameResult.None;\t\r\n\t\t\r\n\t\tthis.threatMap = new ThreatMap(this);\r\n\t\tthis.statusPanel = new StatusPanel(this);\r\n\t\t\r\n\t\tthis.flagDrawAllBarrier = false;\r\n\t\tthis.flagUnitSelected = false;\r\n\t\tthis.barrierConnectionTimer = new GeneralTimer(this, 0.04, 3);\r\n\t\tthis.timerList.push(this.barrierConnectionTimer);\r\n\t}\r\n\t\r\n\tmakeButtons() {\r\n\t\tthis.buttonList.push(new Button(\r\n\t\t\tthis, \"img_button_wait\", consts.buttons.Wait, {x:7, y:1}\r\n\t\t));\r\n\t\tthis.buttonList.push(new Button(\r\n\t\t\tthis, \"img_button_turn_end\", consts.buttons.TurnEnd, {x:7, y:2}\r\n\t\t));\r\n\t\t\r\n\t\tthis.buttonList.push(new Button(\r\n\t\t\tthis, \"img_button_threat\", consts.buttons.Threat, {x:7, y:8}\r\n\t\t));\r\n\t\t\r\n\t\tthis.buttonList.push(new Button(\r\n\t\t\tthis, \"img_button_barrier\", consts.buttons.Barrier, {x:7, y:7}\r\n\t\t));\r\n\t}\r\n\r\n    bindPlayerInputHandler(inputHandler) {\r\n        this.playerInputHandler = inputHandler;\r\n    }\r\n\r\n    eventPlaceUnit(gridPos, isEnemy, typeID, params) {\r\n        this.unitID++;\r\n\t\t\r\n\t\tlet flagConflict = false;\r\n\t\tif (this.findUnitByGridPos(gridPos) !== null) {\r\n\t\t\tflagConflict = true;\r\n\t\t\t//alert(\"unit placement conflict detected\");\r\n\t\t}\r\n\t\t\r\n\t\tlet list = isEnemy ? this.enemyUnitList : this.playerUnitList;\r\n\t\tlet newUnit = this.unitCreator.createUnit(\r\n\t\t\tthis.unitID, this, gridPos, isEnemy, typeID, params\r\n\t\t);\r\n\t\tlist.push(newUnit);\r\n\t\tif (!isEnemy && this.flagUseCustomPlayerSkills) {\r\n\t\t\tthis.overridePlayerSkills(newUnit, list.length);\r\n\t\t}\r\n\t\tnewUnit.initAfterCreation();\r\n\t\t\r\n\t\tif (flagConflict) this.resolveNewUnitConflict(newUnit);\r\n\t\t\r\n\t\t//alert(\"unit created with ID = \" + this.unitID);\r\n    }\r\n\t\r\n\toverridePlayerSkills(unit, idx) {\r\n\t\tunit.params.skills = [];\r\n\t\tthis.customPlayerSkills[idx].forEach(skillID => {\r\n\t\t\tif (parseInt(skillID) === consts.skills.none) {\r\n\t\t\t\t//alert(skillID+\" \"+consts.skills.none);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//alert(this.mapSkillIDtoStr[skillID]);\r\n\t\t\tunit.params.skills.push({\r\n\t\t\t\tskill: this.mapSkillIDtoStr[skillID],\r\n\t\t\t\tlevel: 1\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\tresolveNewUnitConflict(unit) {\r\n\t\tlet pdir = this.pathFinder.floodFill(unit, unit.gridPos, 300, true);\r\n\t\tlet len = pdir.listPossibleDest.length;\r\n\t\tfor (let i = 0; i < len; i ++) {\r\n\t\t\tif (this.findUnitByGridPos(pdir.listPossibleDest[i]) === null) {\r\n\t\t\t\tunit.eventForceMovement(pdir.listPossibleDest[i]);\r\n\t\t\t\t//alert(\"Replace new unit to \"+unit.gridPos.x+\",\"+unit.gridPos.y);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tchangePlayerSkillsAndRestart(skills) {\r\n\t\tthis.customPlayerSkills = skills;\r\n\t\tthis.flagUseCustomPlayerSkills = true;\r\n\t\t\r\n\t\tif (this.currentStageIdxStr === null) this.startDefaultStage();\r\n\t\telse this.start(this.currentStageIdxStr);\r\n\t}\r\n\t\r\n\tusePresetSkillsAndRestart() {\r\n\t\tthis.flagUseCustomPlayerSkills = false;\r\n\t\tif (this.currentStageIdxStr === null) this.startDefaultStage();\r\n\t\telse this.start(this.currentStageIdxStr);\r\n\t}\r\n\t\r\n\tstartDefaultStage() {\r\n\t\tthis.start(this.stageList.defaultStageIdx);\r\n\t}\r\n\r\n    start(stageIdxStr) {\r\n\t\t//alert(\"start\")\r\n\t\tthis.resetGameState();\r\n\t\t\r\n\t\tthis.currentStageIdxStr = stageIdxStr;\r\n\t\tthis.stageList.loadStage(stageIdxStr, this);\r\n\r\n        this.stage.initStage(this);\r\n\t\t\r\n        this.playerPhase();\r\n\t\tthis.requirePathUpdate();\r\n    }\r\n\r\n\trequirePathUpdate() {\r\n\t\tthis.playerUnitList.forEach(object => object.eventRequirePathUpdate());\r\n        this.enemyUnitList.forEach(object => object.eventRequirePathUpdate());\r\n\t\t\r\n\t\tthis.updateThreatMap();\r\n\t}\r\n\r\n\tupdateThreatMap() {\r\n\t\tthis.threatMap.updateThreatMap();\r\n\t}\r\n\t\r\n\ttoggleThreat() {\r\n\t\tthis.threatMap.toggleThreat();\r\n\t}\r\n\t\r\n\ttoggleBarrier() {\r\n\t\tthis.flagDrawAllBarrier = !this.flagDrawAllBarrier;\r\n\t\tthis.barrierConnectionTimer.resetTimer();\r\n\t}\r\n\r\n\tcountActiveUnits() {\r\n\t\tlet count = 0;\r\n\t\tlet list = null;\r\n\t\tif (this.currentPhase === this.PHASE_PLAYER) list = this.playerUnitList;\r\n\t\tif (this.currentPhase === this.PHASE_ENEMY) list = this.enemyUnitList;\r\n\t\tif (list === null) return 0;\r\n\t\tlist.forEach(unit => {\r\n\t\t\tif (unit.isActive()) count ++;\r\n\t\t});\r\n\t\treturn count;\r\n\t}\r\n\r\n    eventActionExecuted() {\r\n        if (this.countActiveUnits() === 0) {\r\n            this.endPhase();\r\n        }\r\n        \r\n\t\tthis.requirePathUpdate();\r\n    }\r\n\r\n\teventButtonTurnEnd() {\r\n\t\tlet list = (this.currentPhase === this.PHASE_PLAYER) ? \r\n\t\t\tthis.playerUnitList : this.enemyUnitList;\r\n\t\t\r\n\t\tlist.forEach(unit => {\r\n\t\t\tif (unit.isActive()) unit.eventExecuteWait();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\teventSelectUnit(unit) {\r\n\t\tthis.statusPanel.eventSelectUnit(unit);\r\n\t\tthis.flagUnitSelected = true;\r\n\t\tthis.barrierConnectionTimer.resetTimer();\r\n\t}\r\n\t\r\n\teventDeselect() {\r\n\t\tthis.statusPanel.eventDeselect();\r\n\t\tthis.flagUnitSelected = false;\r\n\t\tthis.barrierConnectionTimer.resetTimer();\r\n\t}\r\n\r\n    playerPhase() {\r\n        //alert(\"Player Phase\");\r\n        this.turn++;\r\n        this.currentPhase = this.PHASE_PLAYER;\r\n        this.playerUnitList.forEach(object => {\r\n            object.eventNewTurn();\r\n        });\r\n    }\r\n\r\n    enemyPhase() {\r\n        //alert(\"Enemy Phase\");\r\n        this.currentPhase = this.PHASE_ENEMY;\r\n        this.enemyUnitList.forEach(object => {\r\n            object.eventNewTurn();\r\n        });\r\n        //this.endPhase();\r\n    }\r\n\r\n\taddNewEffect(effect) {\r\n\t\tthis.effectList.push(effect);\r\n\t}\r\n\r\n    endPhase() {\r\n        this.stage.endTurn(this);\r\n        this.framesBeforeChangePhase = 80;\r\n        this.isPhaseBlocked = true;\r\n        if (this.currentPhase === this.PHASE_PLAYER) {\r\n            this.addNewEffect(new EffectStartPhase(this, true));\r\n        } else if (this.currentPhase === this.PHASE_ENEMY) {\r\n            this.addNewEffect(new EffectStartPhase(this, false));\r\n        }\r\n    }\r\n\r\n    procChangePhase(df) {\r\n        this.framesBeforeChangePhase -= df;\r\n        if (this.framesBeforeChangePhase <= 0) {\r\n            this.isPhaseBlocked = false;\r\n            if (this.currentPhase === this.PHASE_PLAYER) {\r\n                this.enemyPhase();\r\n            } else if (this.currentPhase === this.PHASE_ENEMY) {\r\n                this.playerPhase();\r\n            }\r\n        }\r\n    }\r\n\r\n    findUnitInListByGridPos(unitList, gridPos) {\r\n        let len = unitList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (\r\n                unitList[i].gridPos.x === gridPos.x &&\r\n                unitList[i].gridPos.y === gridPos.y\r\n            ) {\r\n                return unitList[i]; // only one unit should be triggered\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findPlayerUnitByGridPos(gridPos) {\r\n        //alert(gridPos.x + \", \" + gridPos.y);\r\n        return this.findUnitInListByGridPos(this.playerUnitList, gridPos);\r\n    }\r\n\r\n    findEnemyUnitByGridPos(gridPos) {\r\n        return this.findUnitInListByGridPos(this.enemyUnitList, gridPos);\r\n    }\r\n\r\n    findSelfUnitByGridPos(isEnemy, gridPos) {\r\n        if (isEnemy) return this.findEnemyUnitByGridPos(gridPos);\r\n        else return this.findPlayerUnitByGridPos(gridPos);\r\n    }\r\n\r\n    findOppoUnitByGridPos(isEnemy, gridPos) {\r\n        if (isEnemy) return this.findPlayerUnitByGridPos(gridPos);\r\n        else return this.findEnemyUnitByGridPos(gridPos);\r\n    }\r\n\r\n    findUnitByGridPos(gridPos) {\r\n        let unit = this.findPlayerUnitByGridPos(gridPos);\r\n        if (unit !== null) return unit;\r\n        unit = this.findEnemyUnitByGridPos(gridPos);\r\n        if (unit !== null) return unit;\r\n        return null;\r\n    }\r\n\r\n\tfindUnitByID(isEnemy, id) {\r\n\t\t//alert(id);\r\n\t\tlet unit = isEnemy ? this.enemyUnitList.find(function (unit) {return unit.unitID === id;})\r\n\t\t\t: this.playerUnitList.find(function (unit) {return unit.unitID === id;});;\r\n\t\t//let unit = null;\r\n\t\t//this.enemyUnitList.forEach(u => {if (u.unitID === id) unit = u;})\r\n\t\t//alert(unit);\r\n\t\tif (unit === undefined) return null;\r\n\t\treturn unit;\r\n\t\t//if (isEnemy) return ;\r\n\t\t//else return this.playerUnitList.find(unit => unit.unitID === id);\r\n\t}\r\n\r\n\tfindButton(pos) {\r\n\t\tlet result = null;\r\n\t\tthis.buttonList.forEach(button => {\r\n\t\t\tif (button.checkClick(pos)) {\r\n\t\t\t\tresult = button.buttonID;\r\n\t\t\t\tbutton.eventClick();\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n    mouseClick(pos) {\r\n        // do nothing\r\n    }\r\n\r\n    eventBattle(attacker, target) {\r\n        target.eventLoseHP(attacker.attack);\r\n    }\r\n\r\n    eventUnitDeath(unit) {\r\n\t\tif (unit.isEnemy) {\r\n\t\t\tthis.enemyUnitList.forEach(eu => {\r\n\t\t\t\tif (eu.barrierTotal !== null && eu.barrierTotal > 0) {\r\n\t\t\t\t\teu.eventLoseBarrier(unit);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n        if (unit.isEnemy) removeObjectFromList(unit, this.enemyUnitList);\r\n        else { \r\n\t\t\t//removeObjectFromList(unit, this.playerUnitList); // to draw the grave\r\n\t\t\tthis.gameResult = consts.gameResult.Lose;\r\n\t\t}\r\n\r\n        if (this.enemyUnitList.length <= 0)\r\n            this.gameResult = consts.gameResult.Win;\r\n    }\r\n\r\n    eventEffectEnd(effect) {\r\n        removeObjectFromList(effect, this.effectList);\r\n    }\r\n\r\n\t// called by abstractController, pass to this.moveAssistList\r\n\tcheckMoveAssist(user, dest, target) {\r\n\t\tif (user.params === null || \r\n\t\t\ttypeof(user.params.moveAssist) === \"undefined\" ||\r\n\t\t\tuser.params.moveAssist === null\r\n\t\t) return false;\r\n\t\treturn this.moveAssistList.checkEligibility(user.params.moveAssist, user, dest, target);\r\n\t}\r\n\r\n\t// called by abstractController, pass to this.moveAssistList\r\n\teventExecuteMoveAssist(user, target) {\r\n\t\tif (user.params === null || \r\n\t\t\ttypeof(user.params.moveAssist) === \"undefined\" ||\r\n\t\t\tuser.params.moveAssist === null\r\n\t\t) return false;\r\n\t\treturn this.moveAssistList.execute(user.params.moveAssist, user, target);\r\n\t}\r\n\r\n\tgameEnds() {\r\n\t\tif (this.gameResult === consts.gameResult.Win) {\r\n\t\t\tthis.addNewEffect(new EffectStageClear(this));\r\n\t\t\tthis.gameResult = consts.gameResult.GameEnded;\r\n\t\t\t//this.currentPhase = this.PHASE_NONE;\r\n\t\t}\r\n\t\tif (this.gameResult === consts.gameResult.Lose) {\r\n\t\t\t//alert(\"GAME OVER\");\r\n\t\t\tthis.addNewEffect(new EffectGameOver(this));\r\n\t\t\tthis.gameResult = consts.gameResult.GameEnded;\r\n\t\t\t//this.currentPhase = this.PHASE_NONE;\r\n\t\t}\r\n\t}\r\n\r\n    update(df) {\r\n\t\tif (this.gameResult !== consts.gameResult.None) {\r\n\t\t\tthis.gameEnds();\r\n\t\t\t// return;\r\n\t\t}\r\n\t\t\r\n\t\tthis.timerList.forEach(object => object.update(df));\r\n\t\tthis.buttonList.forEach(object => object.update(df));\r\n\t\t\r\n        if (this.framesBeforeChangePhase > 0) this.procChangePhase(df);\r\n\t\tif (this.gameResult === consts.gameResult.None) {\r\n\t\t\tif (this.currentPhase === this.PHASE_ENEMY) this.enemyAI.update(df);\r\n\t\t\tif (this.currentPhase === this.PHASE_PLAYER) this.playerInputHandler.update(df);\r\n\t\t}\r\n\r\n        this.playerUnitList.forEach(object => object.update(df));\r\n        this.enemyUnitList.forEach(object => object.update(df));\r\n\t\t\r\n        this.effectList.forEach(object => object.update(df));\r\n    }\r\n\r\n    draw(ctx) {\r\n        this.stage.draw(ctx);\r\n\t\tthis.buttonList.forEach(object => object.draw(ctx));\r\n        this.grid.draw(ctx);\r\n\t\tthis.statusPanel.draw(ctx);\r\n\t\t\r\n\t\tthis.playerUnitList.forEach(object => object.drawThreat(ctx));\r\n        this.enemyUnitList.forEach(object => object.drawThreat(ctx));\r\n        this.playerUnitList.forEach(object => object.drawUnitBG(ctx));\r\n        this.enemyUnitList.forEach(object => object.drawUnitBG(ctx));\r\n        this.playerUnitList.forEach(object => object.drawUnit(ctx));\r\n        this.enemyUnitList.forEach(object => object.drawUnit(ctx));\r\n\t\t\r\n\t\tthis.enemyUnitList.forEach(object => {\r\n\t\t\tif (object.drawBarrierConnection !== undefined) \r\n\t\t\t\tobject.drawBarrierConnection(ctx);\r\n\t\t});\r\n\t\t\r\n\t\tthis.threatMap.draw(ctx);\r\n\r\n        this.effectList.forEach(object => object.draw(ctx));\r\n\r\n    }\r\n\r\n    gridPosToPos(gridPos) {\r\n        return {\r\n            x: gridPos.x * this.gridSize - this.gridSize / 2,\r\n            y: gridPos.y * this.gridSize - this.gridSize / 2\r\n        };\r\n    }\r\n\t\r\n\t// if making too many {} is really a problem then use this\r\n\tgridPosToPosX(gpx) {\r\n\t\treturn gpx * this.gridSize - this.gridSize / 2;\r\n\t}\r\n\t\r\n\tgridPosToPosY(gpy) {\r\n\t\treturn gpy * this.gridSize - this.gridSize / 2;\r\n\t}\r\n\r\n    posToGridPos(pos) {\r\n        return {\r\n            x: Math.floor(pos.x / this.gridSize) + 1,\r\n            y: Math.floor(pos.y / this.gridSize) + 1\r\n        };\r\n    }\r\n}\r\n\r\nfunction removeObjectFromList(object, list) {\r\n    let len = list.length,\r\n        i = 0;\r\n    for (i = 0; i < len; i++) {\r\n        if (list[i] === object) break;\r\n    }\r\n    list.splice(i, 1);\r\n}\r\n","export default class MapSelecter {\r\n\tconstructor (hGame) {\r\n\t\tlet divSelecter = document.getElementById(\"mapSelecter\");\r\n\t\tdivSelecter.innerHTML = hGame.stageList.getStageListStringForMapSelecter();\r\n\t\t\r\n\t\tlet button = document.getElementById(\"divMapSelecter_confirm\");\r\n\t\tbutton.addEventListener(\"click\", event => {\r\n\t\t\tlet e = document.getElementById(\"divMapSelecter_list\");\r\n\t\t\tlet result = e.options[e.selectedIndex].value;\r\n\t\t\t//alert(\"confirmed \" + result);\r\n\t\t\thGame.start(result);\r\n\t\t});\r\n\r\n\t}\r\n}","import consts from \"/src/consts\";\r\n\r\nexport default class MapSelecter {\r\n\tconstructor (hGame) {\r\n\t\tlet divSelecter = document.getElementById(\"skillSelecter\");\r\n\t\t\r\n\t\tlet maxSkills = consts.game.maxSkillNumber;\r\n\t\tlet unitNum = consts.game.maxPlayerUnitNumber;\r\n\t\tlet str = `\r\n\t\t<br />\r\n\t\t<button type=\"button\" class=\"collapsible2\">Custom skills</button>\r\n\t\t<div class=\"collapsedContent2\">\r\n\t\t`;\r\n\t\t\r\n\t\tfor (let u = 1; u <= unitNum; u ++) {\r\n\t\t\tstr += `Unit ` + u + `: <br />`;\r\n\t\t\tfor (let i = 1; i <= maxSkills; i ++) {\r\n\t\t\t\tstr += hGame.skillCreator.getSkillListStringForSelecter(i, u);\r\n\t\t\t\tstr += `<br />`;\r\n\t\t\t}\r\n\t\t\tstr += `<br />`;\r\n\t\t}\r\n\t\tstr += `<button id=\"divSkillSelecter_confirm\">Confirm</button>\r\n\t\t<button id=\"divSkillSelecter_usePreset\">Use preset skills</button>\r\n\t\t<br /></div>`;\r\n\t\t\r\n\t\tdivSelecter.innerHTML = str;\r\n\t\t\r\n\t\tlet button = document.getElementById(\"divSkillSelecter_confirm\");\r\n\t\tbutton.addEventListener(\"click\", event => {\r\n\t\t\tlet skills = [];\r\n\t\t\tfor (let u = 1; u <= unitNum; u ++) {\r\n\t\t\t\tskills[u] = [];\r\n\t\t\t\tfor (let i = 1; i <= maxSkills; i ++) {\r\n\t\t\t\t\tlet e = document.getElementById(\"divSkillSelecter_\"+u+\"_\"+i+\"_list\");\r\n\t\t\t\t\tskills[u][i] = e.options[e.selectedIndex].value;\r\n\t\t\t\t\t//alert(\"confirmed \" + u + \"[\" + i + \"]= \"+ skills[u][i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thGame.changePlayerSkillsAndRestart(skills);\r\n\t\t});\r\n\t\t\r\n\t\tdocument.getElementById(\"divSkillSelecter_usePreset\").addEventListener(\"click\", event => {\r\n\t\t\thGame.usePresetSkillsAndRestart();\r\n\t\t});\r\n\t}\r\n\r\n}","import InputHandler from \"/src/inputHandler\";\nimport Game from \"/src/game\";\nimport MapSelecter from \"/src/ui/mapSelecter\";\nimport SkillSelecter from \"/src/ui/skillSelecter\";\nimport consts from \"/src/consts\";\n\nlet canvas = document.getElementById(\"gameScreen\");\nlet ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = 360;\nconst GAME_HEIGHT = 640;\nconst DRAW_WIDTH = 430;\nconst DRAW_HEIGHT = 640;\n\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT, canvas);\nlet playerInputHandler = new InputHandler(game);\ngame.bindPlayerInputHandler(playerInputHandler);\n\nlet mapSelecter = new MapSelecter(game);\nlet skillSelecter = new SkillSelecter(game);\n\ngame.startDefaultStage();\n\nlet lastTime = 0;\nfunction gameLoop(timestamp) {\n    let dt = timestamp - lastTime;\n    lastTime = timestamp;\n    let df = dt / 16; // assume 16 ms per frame\n\n    ctx.clearRect(0, 0, DRAW_WIDTH, DRAW_HEIGHT);\n    game.update(df);\n    game.draw(ctx);\n\n\trequestAnimationFrame(gameLoop);\n}\n\nfunction scriptCollapsibles(strClass) {\n\t// https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_collapsible\n\tlet collapsibles = document.getElementsByClassName(strClass);\n\tfor (let i = 0; i < collapsibles.length; i++) {\n\t\tcollapsibles[i].addEventListener(\"click\", function() {\n\t\t\tthis.classList.toggle(\"active\");\n\t\t\tlet content = this.nextElementSibling; // wtf this is handy\n\t\t\tif (content.style.display === \"block\") {\n\t\t\t\tcontent.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tcontent.style.display = \"block\";\n\t\t\t}\n\t\t});\n\t}\n}\n\nscriptCollapsibles(\"collapsible\") ;\nscriptCollapsibles(\"collapsible2\") ;\n\nrequestAnimationFrame(gameLoop);\n"]}